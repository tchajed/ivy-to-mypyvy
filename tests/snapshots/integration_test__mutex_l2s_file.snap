---
source: tests/integration_test.rs
expression: output
---
sort thread

mutable relation _old_l2s_g_0()
mutable relation _old_l2s_g_2(?)
mutable relation _old_l2s_g_3(?)
mutable relation _old_l2s_g_4(?)
mutable relation d(?)
mutable relation l2s_a(?)
mutable relation l2s_d(?)
mutable relation l2s_frozen()
mutable relation l2s_g_0()
mutable relation l2s_g_1
mutable relation l2s_g_2(?)
mutable relation l2s_g_3(?)
mutable relation l2s_g_4(?)
mutable relation l2s_s_0()
mutable relation l2s_s_1(?)
mutable relation l2s_s_2(?)
mutable relation l2s_s_3(?)
mutable relation l2s_s_4(?)
mutable relation l2s_s_5(?)
mutable relation l2s_s_6(?)
mutable relation l2s_s_7(?)
mutable relation l2s_saved()
mutable relation l2s_w_0()
mutable relation l2s_w_1(?)
mutable relation l2s_waiting()
mutable relation locked()
mutable relation pc_atomic_cas(thread)
mutable relation pc_atomic_store(thread)
mutable relation pc_finished(thread)
mutable relation pc_futex_wait(thread)
mutable relation pc_futex_wake(thread)
mutable relation pc_kernel_wait(thread)
mutable relation queue(thread)
mutable relation scheduled(?)
mutable relation havoc_l2s_g_0()
mutable relation havoc_l2s_g_0__1()
mutable relation havoc_l2s_g_2(?)
mutable relation havoc_l2s_g_2__1(?)
mutable relation havoc_l2s_g_3(?)
mutable relation havoc_l2s_g_3__1(?)
mutable relation havoc_l2s_g_3__10(?)
mutable relation havoc_l2s_g_3__11(?)
mutable relation havoc_l2s_g_3__12(?)
mutable relation havoc_l2s_g_3__13(?)
mutable relation havoc_l2s_g_3__2(?)
mutable relation havoc_l2s_g_3__3(?)
mutable relation havoc_l2s_g_3__4(?)
mutable relation havoc_l2s_g_3__5(?)
mutable relation havoc_l2s_g_3__6(?)
mutable relation havoc_l2s_g_3__7(?)
mutable relation havoc_l2s_g_3__8(?)
mutable relation havoc_l2s_g_3__9(?)
mutable relation havoc_l2s_g_4(?)
mutable relation havoc_l2s_g_4__1(?)
mutable relation havoc_l2s_g_4__10(?)
mutable relation havoc_l2s_g_4__11(?)
mutable relation havoc_l2s_g_4__12(?)
mutable relation havoc_l2s_g_4__13(?)
mutable relation havoc_l2s_g_4__2(?)
mutable relation havoc_l2s_g_4__3(?)
mutable relation havoc_l2s_g_4__4(?)
mutable relation havoc_l2s_g_4__5(?)
mutable relation havoc_l2s_g_4__6(?)
mutable relation havoc_l2s_g_4__7(?)
mutable relation havoc_l2s_g_4__8(?)
mutable relation havoc_l2s_g_4__9(?)
mutable relation havoc_path
mutable relation havoc_path__1
mutable relation __error

init !__error
init pc_atomic_cas(T) <-> true
init pc_futex_wait(T) <-> false
init pc_kernel_wait(T) <-> false
init pc_atomic_store(T) <-> false
init pc_futex_wake(T) <-> false
init pc_finished(T) <-> false
init locked <-> false
init queue(T) <-> false
init scheduled(T) <-> false
init d(T) <-> false
init l2s_waiting <-> true
init l2s_frozen <-> false
init l2s_saved <-> false
init l2s_d(t0) <-> true
init l2s_w_1(V0) <-> (l2s_d(V0) & (!(scheduled(V0) & !l2s_g_3(V0))))
init l2s_w_0 <-> (!((forall T. d(T)) & !l2s_g_1))
init (l2s_g_1 -> (!(forall T. d(T))))
init (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
init (l2s_g_0 -> !pc_finished(t0))
init (forall V0. l2s_g_3(V0) -> !scheduled(V0))
init (forall V0. l2s_g_2(V0) -> !pc_finished(V0))
init (!(((exists T0. l2s_g_2(T0)) -> l2s_g_0) & (!(l2s_g_1 -> ((forall T. l2s_g_4(T)) -> (forall T. !l2s_g_2(T)))))))

transition step_atomic_store(t)
  modifies _old_l2s_g_3, _old_l2s_g_4, l2s_d, l2s_g_3, l2s_g_4, l2s_w_1, locked, pc_atomic_store, pc_futex_wake, scheduled
  # assumes:
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !pc_finished(t0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  & (forall V0. l2s_g_2(V0) -> !pc_finished(V0))
  & pc_atomic_store(t)
  & (forall V0. l2s_g_3(V0) -> havoc_l2s_g_3(V0))
  & (forall V0. !(l2s_g_3(V0) & (!(scheduled(V0) -> !havoc_l2s_g_3(V0)))))
  & (forall V0. l2s_g_4(V0) -> havoc_l2s_g_4(V0))
  & (forall V0. !(l2s_g_4(V0) & (!(havoc_l2s_g_3(V0) -> !havoc_l2s_g_4(V0)))))
  & (forall V0. havoc_l2s_g_3(V0) -> (!(V0 = t)))
  & (forall V0. havoc_l2s_g_4(V0) -> !havoc_l2s_g_3(V0))
  & (forall V0. havoc_l2s_g_3(V0) -> havoc_l2s_g_3__1(V0))
  & (forall V0. !(havoc_l2s_g_3(V0) & (!((V0 = t) -> !havoc_l2s_g_3__1(V0)))))
  & (forall V0. havoc_l2s_g_4(V0) -> havoc_l2s_g_4__1(V0))
  & (forall V0. !(havoc_l2s_g_4(V0) & (!(havoc_l2s_g_3__1(V0) -> !havoc_l2s_g_4__1(V0)))))
  & (forall V0. havoc_l2s_g_3__1(V0) -> !false)
  & (forall V0. havoc_l2s_g_4__1(V0) -> !havoc_l2s_g_3__1(V0))
  # transitions:
  & (new(_old_l2s_g_3(V0)) <-> havoc_l2s_g_3(V0))
  & (new(_old_l2s_g_4(V0)) <-> havoc_l2s_g_4(V0))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else (if T0 = t then true else l2s_d(T0)))
  & (new(l2s_g_3(V0)) <-> havoc_l2s_g_3__1(V0))
  & (new(l2s_g_4(V0)) <-> havoc_l2s_g_4__1(V0))
  & (new(l2s_w_1(V0)) <-> (l2s_w_1(V0) & (!((V0 = t) & !havoc_l2s_g_3(V0)))) & (!(false & !havoc_l2s_g_3__1(V0))))
  & (new(locked) <-> false)
  & (new(pc_atomic_store(T)) <-> if T = t then false else pc_atomic_store(T))
  & (new(pc_futex_wake(T)) <-> if T = t then true else pc_futex_wake(T))
  & (new(scheduled(T)) <-> false)

transition step_futex_wake_if_some(t, t_q)
  modifies _old_l2s_g_0, _old_l2s_g_2, _old_l2s_g_3, _old_l2s_g_4, l2s_d, l2s_g_0, l2s_g_2, l2s_g_3, l2s_g_4, l2s_w_1, pc_finished, pc_futex_wake, queue, scheduled
  # assumes:
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !pc_finished(t0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  & (forall V0. l2s_g_2(V0) -> !pc_finished(V0))
  & pc_futex_wake(t)
  & queue(t_q)
  & (l2s_g_0 -> havoc_l2s_g_0)
  & (!(l2s_g_0 & (!(pc_finished(t0) -> !havoc_l2s_g_0))))
  & (forall V0. l2s_g_2(V0) -> havoc_l2s_g_2(V0))
  & (forall V0. !(l2s_g_2(V0) & (!(pc_finished(V0) -> !havoc_l2s_g_2(V0)))))
  & (havoc_l2s_g_0 -> (!(if t0 = t then true else pc_finished(t0))))
  & (forall V0. havoc_l2s_g_2(V0) -> (!(if V0 = t then true else pc_finished(V0))))
  & (forall V0. l2s_g_3(V0) -> havoc_l2s_g_3__2(V0))
  & (forall V0. !(l2s_g_3(V0) & (!(scheduled(V0) -> !havoc_l2s_g_3__2(V0)))))
  & (forall V0. l2s_g_4(V0) -> havoc_l2s_g_4__2(V0))
  & (forall V0. !(l2s_g_4(V0) & (!(havoc_l2s_g_3__2(V0) -> !havoc_l2s_g_4__2(V0)))))
  & (forall V0. havoc_l2s_g_3__2(V0) -> (!(V0 = t)))
  & (forall V0. havoc_l2s_g_4__2(V0) -> !havoc_l2s_g_3__2(V0))
  & (forall V0. havoc_l2s_g_3__2(V0) -> havoc_l2s_g_3__3(V0))
  & (forall V0. !(havoc_l2s_g_3__2(V0) & (!((V0 = t) -> !havoc_l2s_g_3__3(V0)))))
  & (forall V0. havoc_l2s_g_4__2(V0) -> havoc_l2s_g_4__3(V0))
  & (forall V0. !(havoc_l2s_g_4__2(V0) & (!(havoc_l2s_g_3__3(V0) -> !havoc_l2s_g_4__3(V0)))))
  & (forall V0. havoc_l2s_g_3__3(V0) -> !false)
  & (forall V0. havoc_l2s_g_4__3(V0) -> !havoc_l2s_g_3__3(V0))
  # transitions:
  & (new(_old_l2s_g_0) <-> l2s_g_0)
  & (new(_old_l2s_g_2(V0)) <-> l2s_g_2(V0))
  & (new(_old_l2s_g_3(V0)) <-> havoc_l2s_g_3__2(V0))
  & (new(_old_l2s_g_4(V0)) <-> havoc_l2s_g_4__2(V0))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else (if T0 = t then true else l2s_d(T0)))
  & (new(l2s_g_0) <-> havoc_l2s_g_0)
  & (new(l2s_g_2(V0)) <-> havoc_l2s_g_2(V0))
  & (new(l2s_g_3(V0)) <-> havoc_l2s_g_3__3(V0))
  & (new(l2s_g_4(V0)) <-> havoc_l2s_g_4__3(V0))
  & (new(l2s_w_1(V0)) <-> (l2s_w_1(V0) & (!((V0 = t) & !havoc_l2s_g_3__2(V0)))) & (!(false & !havoc_l2s_g_3__3(V0))))
  & (new(pc_finished(T)) <-> if T = t then true else pc_finished(T))
  & (new(pc_futex_wake(T)) <-> if T = t then false else pc_futex_wake(T))
  & (new(queue(T_Q)) <-> if T_Q = t_q then false else queue(T_Q))
  & (new(scheduled(T)) <-> false)

transition step_futex_wake_if_some_else(t)
  modifies _old_l2s_g_0, _old_l2s_g_2, _old_l2s_g_3, _old_l2s_g_4, l2s_d, l2s_g_0, l2s_g_2, l2s_g_3, l2s_g_4, l2s_w_1, pc_finished, pc_futex_wake, scheduled
  # assumes:
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !pc_finished(t0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  & (forall V0. l2s_g_2(V0) -> !pc_finished(V0))
  & pc_futex_wake(t)
  & (forall t_q. !queue(t_q))
  & (l2s_g_0 -> havoc_l2s_g_0__1)
  & (!(l2s_g_0 & (!(pc_finished(t0) -> !havoc_l2s_g_0__1))))
  & (forall V0. l2s_g_2(V0) -> havoc_l2s_g_2__1(V0))
  & (forall V0. !(l2s_g_2(V0) & (!(pc_finished(V0) -> !havoc_l2s_g_2__1(V0)))))
  & (havoc_l2s_g_0__1 -> (!(if t0 = t then true else pc_finished(t0))))
  & (forall V0. havoc_l2s_g_2__1(V0) -> (!(if V0 = t then true else pc_finished(V0))))
  & (forall V0. l2s_g_3(V0) -> havoc_l2s_g_3__4(V0))
  & (forall V0. !(l2s_g_3(V0) & (!(scheduled(V0) -> !havoc_l2s_g_3__4(V0)))))
  & (forall V0. l2s_g_4(V0) -> havoc_l2s_g_4__4(V0))
  & (forall V0. !(l2s_g_4(V0) & (!(havoc_l2s_g_3__4(V0) -> !havoc_l2s_g_4__4(V0)))))
  & (forall V0. havoc_l2s_g_3__4(V0) -> (!(V0 = t)))
  & (forall V0. havoc_l2s_g_4__4(V0) -> !havoc_l2s_g_3__4(V0))
  & (forall V0. havoc_l2s_g_3__4(V0) -> havoc_l2s_g_3__5(V0))
  & (forall V0. !(havoc_l2s_g_3__4(V0) & (!((V0 = t) -> !havoc_l2s_g_3__5(V0)))))
  & (forall V0. havoc_l2s_g_4__4(V0) -> havoc_l2s_g_4__5(V0))
  & (forall V0. !(havoc_l2s_g_4__4(V0) & (!(havoc_l2s_g_3__5(V0) -> !havoc_l2s_g_4__5(V0)))))
  & (forall V0. havoc_l2s_g_3__5(V0) -> !false)
  & (forall V0. havoc_l2s_g_4__5(V0) -> !havoc_l2s_g_3__5(V0))
  # transitions:
  & (new(_old_l2s_g_0) <-> l2s_g_0)
  & (new(_old_l2s_g_2(V0)) <-> l2s_g_2(V0))
  & (new(_old_l2s_g_3(V0)) <-> havoc_l2s_g_3__4(V0))
  & (new(_old_l2s_g_4(V0)) <-> havoc_l2s_g_4__4(V0))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else (if T0 = t then true else l2s_d(T0)))
  & (new(l2s_g_0) <-> havoc_l2s_g_0__1)
  & (new(l2s_g_2(V0)) <-> havoc_l2s_g_2__1(V0))
  & (new(l2s_g_3(V0)) <-> havoc_l2s_g_3__5(V0))
  & (new(l2s_g_4(V0)) <-> havoc_l2s_g_4__5(V0))
  & (new(l2s_w_1(V0)) <-> (l2s_w_1(V0) & (!((V0 = t) & !havoc_l2s_g_3__4(V0)))) & (!(false & !havoc_l2s_g_3__5(V0))))
  & (new(pc_finished(T)) <-> if T = t then true else pc_finished(T))
  & (new(pc_futex_wake(T)) <-> if T = t then false else pc_futex_wake(T))
  & (new(scheduled(T)) <-> false)

transition step_futex_wait(t)
  modifies _old_l2s_g_3, _old_l2s_g_4, l2s_d, l2s_g_3, l2s_g_4, l2s_w_1, pc_atomic_cas, pc_futex_wait, pc_kernel_wait, queue, scheduled
  # assumes:
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !pc_finished(t0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  & (forall V0. l2s_g_2(V0) -> !pc_finished(V0))
  & pc_futex_wait(t)
  & (forall V0. l2s_g_3(V0) -> havoc_l2s_g_3__6(V0))
  & (forall V0. !(l2s_g_3(V0) & (!(scheduled(V0) -> !havoc_l2s_g_3__6(V0)))))
  & (forall V0. l2s_g_4(V0) -> havoc_l2s_g_4__6(V0))
  & (forall V0. !(l2s_g_4(V0) & (!(havoc_l2s_g_3__6(V0) -> !havoc_l2s_g_4__6(V0)))))
  & (forall V0. havoc_l2s_g_3__6(V0) -> (!(V0 = t)))
  & (forall V0. havoc_l2s_g_4__6(V0) -> !havoc_l2s_g_3__6(V0))
  & (forall V0. havoc_l2s_g_3__6(V0) -> havoc_l2s_g_3__7(V0))
  & (forall V0. !(havoc_l2s_g_3__6(V0) & (!((V0 = t) -> !havoc_l2s_g_3__7(V0)))))
  & (forall V0. havoc_l2s_g_4__6(V0) -> havoc_l2s_g_4__7(V0))
  & (forall V0. !(havoc_l2s_g_4__6(V0) & (!(havoc_l2s_g_3__7(V0) -> !havoc_l2s_g_4__7(V0)))))
  & (forall V0. havoc_l2s_g_3__7(V0) -> !false)
  & (forall V0. havoc_l2s_g_4__7(V0) -> !havoc_l2s_g_3__7(V0))
  # transitions:
  & (new(_old_l2s_g_3(V0)) <-> havoc_l2s_g_3__6(V0))
  & (new(_old_l2s_g_4(V0)) <-> havoc_l2s_g_4__6(V0))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else (if T0 = t then true else l2s_d(T0)))
  & (new(l2s_g_3(V0)) <-> havoc_l2s_g_3__7(V0))
  & (new(l2s_g_4(V0)) <-> havoc_l2s_g_4__7(V0))
  & (new(l2s_w_1(V0)) <-> (l2s_w_1(V0) & (!((V0 = t) & !havoc_l2s_g_3__6(V0)))) & (!(false & !havoc_l2s_g_3__7(V0))))
  & (new(pc_atomic_cas(T)) <-> if T = t then (if !locked then true else pc_atomic_cas(t)) else pc_atomic_cas(T))
  & (new(pc_futex_wait(T)) <-> if T = t then false else pc_futex_wait(T))
  & (new(pc_kernel_wait(T)) <-> if T = t then (if locked then true else pc_kernel_wait(t)) else pc_kernel_wait(T))
  & (new(queue(T)) <-> if T = t then (if locked then true else queue(t)) else queue(T))
  & (new(scheduled(T)) <-> false)

transition step_finished(t)
  modifies _old_l2s_g_3, _old_l2s_g_4, l2s_d, l2s_g_3, l2s_g_4, l2s_w_1, scheduled
  # assumes:
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !pc_finished(t0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  & (forall V0. l2s_g_2(V0) -> !pc_finished(V0))
  & pc_finished(t)
  & (forall V0. l2s_g_3(V0) -> havoc_l2s_g_3__8(V0))
  & (forall V0. !(l2s_g_3(V0) & (!(scheduled(V0) -> !havoc_l2s_g_3__8(V0)))))
  & (forall V0. l2s_g_4(V0) -> havoc_l2s_g_4__8(V0))
  & (forall V0. !(l2s_g_4(V0) & (!(havoc_l2s_g_3__8(V0) -> !havoc_l2s_g_4__8(V0)))))
  & (forall V0. havoc_l2s_g_3__8(V0) -> (!(V0 = t)))
  & (forall V0. havoc_l2s_g_4__8(V0) -> !havoc_l2s_g_3__8(V0))
  & (forall V0. havoc_l2s_g_3__8(V0) -> havoc_l2s_g_3__9(V0))
  & (forall V0. !(havoc_l2s_g_3__8(V0) & (!((V0 = t) -> !havoc_l2s_g_3__9(V0)))))
  & (forall V0. havoc_l2s_g_4__8(V0) -> havoc_l2s_g_4__9(V0))
  & (forall V0. !(havoc_l2s_g_4__8(V0) & (!(havoc_l2s_g_3__9(V0) -> !havoc_l2s_g_4__9(V0)))))
  & (forall V0. havoc_l2s_g_3__9(V0) -> !false)
  & (forall V0. havoc_l2s_g_4__9(V0) -> !havoc_l2s_g_3__9(V0))
  # transitions:
  & (new(_old_l2s_g_3(V0)) <-> havoc_l2s_g_3__8(V0))
  & (new(_old_l2s_g_4(V0)) <-> havoc_l2s_g_4__8(V0))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else (if T0 = t then true else l2s_d(T0)))
  & (new(l2s_g_3(V0)) <-> havoc_l2s_g_3__9(V0))
  & (new(l2s_g_4(V0)) <-> havoc_l2s_g_4__9(V0))
  & (new(l2s_w_1(V0)) <-> (l2s_w_1(V0) & (!((V0 = t) & !havoc_l2s_g_3__8(V0)))) & (!(false & !havoc_l2s_g_3__9(V0))))
  & (new(scheduled(T)) <-> false)

transition step_atomic_cas(t)
  modifies _old_l2s_g_3, _old_l2s_g_4, l2s_d, l2s_g_3, l2s_g_4, l2s_w_1, locked, pc_atomic_cas, pc_atomic_store, pc_futex_wait, scheduled
  # assumes:
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !pc_finished(t0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  & (forall V0. l2s_g_2(V0) -> !pc_finished(V0))
  & pc_atomic_cas(t)
  & (forall V0. l2s_g_3(V0) -> havoc_l2s_g_3__10(V0))
  & (forall V0. !(l2s_g_3(V0) & (!(scheduled(V0) -> !havoc_l2s_g_3__10(V0)))))
  & (forall V0. l2s_g_4(V0) -> havoc_l2s_g_4__10(V0))
  & (forall V0. !(l2s_g_4(V0) & (!(havoc_l2s_g_3__10(V0) -> !havoc_l2s_g_4__10(V0)))))
  & (forall V0. havoc_l2s_g_3__10(V0) -> (!(V0 = t)))
  & (forall V0. havoc_l2s_g_4__10(V0) -> !havoc_l2s_g_3__10(V0))
  & (forall V0. havoc_l2s_g_3__10(V0) -> havoc_l2s_g_3__11(V0))
  & (forall V0. !(havoc_l2s_g_3__10(V0) & (!((V0 = t) -> !havoc_l2s_g_3__11(V0)))))
  & (forall V0. havoc_l2s_g_4__10(V0) -> havoc_l2s_g_4__11(V0))
  & (forall V0. !(havoc_l2s_g_4__10(V0) & (!(havoc_l2s_g_3__11(V0) -> !havoc_l2s_g_4__11(V0)))))
  & (forall V0. havoc_l2s_g_3__11(V0) -> !false)
  & (forall V0. havoc_l2s_g_4__11(V0) -> !havoc_l2s_g_3__11(V0))
  # transitions:
  & (new(_old_l2s_g_3(V0)) <-> havoc_l2s_g_3__10(V0))
  & (new(_old_l2s_g_4(V0)) <-> havoc_l2s_g_4__10(V0))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else (if T0 = t then true else l2s_d(T0)))
  & (new(l2s_g_3(V0)) <-> havoc_l2s_g_3__11(V0))
  & (new(l2s_g_4(V0)) <-> havoc_l2s_g_4__11(V0))
  & (new(l2s_w_1(V0)) <-> (l2s_w_1(V0) & (!((V0 = t) & !havoc_l2s_g_3__10(V0)))) & (!(false & !havoc_l2s_g_3__11(V0))))
  & (new(locked) <-> if !locked then true else locked)
  & (new(pc_atomic_cas(T)) <-> if T = t then false else pc_atomic_cas(T))
  & (new(pc_atomic_store(T)) <-> if T = t then (if !locked then true else pc_atomic_store(t)) else pc_atomic_store(T))
  & (new(pc_futex_wait(T)) <-> if T = t then (if locked then true else pc_futex_wait(t)) else pc_futex_wait(T))
  & (new(scheduled(T)) <-> false)

transition step_kernel_wait(t)
  modifies _old_l2s_g_3, _old_l2s_g_4, l2s_d, l2s_g_3, l2s_g_4, l2s_w_1, pc_atomic_cas, pc_kernel_wait, scheduled
  # assumes:
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !pc_finished(t0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  & (forall V0. l2s_g_2(V0) -> !pc_finished(V0))
  & pc_kernel_wait(t)
  & (forall V0. l2s_g_3(V0) -> havoc_l2s_g_3__12(V0))
  & (forall V0. !(l2s_g_3(V0) & (!(scheduled(V0) -> !havoc_l2s_g_3__12(V0)))))
  & (forall V0. l2s_g_4(V0) -> havoc_l2s_g_4__12(V0))
  & (forall V0. !(l2s_g_4(V0) & (!(havoc_l2s_g_3__12(V0) -> !havoc_l2s_g_4__12(V0)))))
  & (forall V0. havoc_l2s_g_3__12(V0) -> (!(V0 = t)))
  & (forall V0. havoc_l2s_g_4__12(V0) -> !havoc_l2s_g_3__12(V0))
  & (forall V0. havoc_l2s_g_3__12(V0) -> havoc_l2s_g_3__13(V0))
  & (forall V0. !(havoc_l2s_g_3__12(V0) & (!((V0 = t) -> !havoc_l2s_g_3__13(V0)))))
  & (forall V0. havoc_l2s_g_4__12(V0) -> havoc_l2s_g_4__13(V0))
  & (forall V0. !(havoc_l2s_g_4__12(V0) & (!(havoc_l2s_g_3__13(V0) -> !havoc_l2s_g_4__13(V0)))))
  & (forall V0. havoc_l2s_g_3__13(V0) -> !false)
  & (forall V0. havoc_l2s_g_4__13(V0) -> !havoc_l2s_g_3__13(V0))
  # transitions:
  & (new(_old_l2s_g_3(V0)) <-> havoc_l2s_g_3__12(V0))
  & (new(_old_l2s_g_4(V0)) <-> havoc_l2s_g_4__12(V0))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else (if T0 = t then true else l2s_d(T0)))
  & (new(l2s_g_3(V0)) <-> havoc_l2s_g_3__13(V0))
  & (new(l2s_g_4(V0)) <-> havoc_l2s_g_4__13(V0))
  & (new(l2s_w_1(V0)) <-> (l2s_w_1(V0) & (!((V0 = t) & !havoc_l2s_g_3__12(V0)))) & (!(false & !havoc_l2s_g_3__13(V0))))
  & (new(pc_atomic_cas(T)) <-> if T = t then (if !queue(t) then true else pc_atomic_cas(t)) else pc_atomic_cas(T))
  & (new(pc_kernel_wait(T)) <-> if T = t then (if !queue(t) then false else pc_kernel_wait(t)) else pc_kernel_wait(T))
  & (new(scheduled(T)) <-> false)

transition idle()
  modifies __error, l2s_a, l2s_d, l2s_frozen, l2s_s_0, l2s_s_1, l2s_s_2, l2s_s_3, l2s_s_4, l2s_s_5, l2s_s_6, l2s_s_7, l2s_saved, l2s_w_0, l2s_w_1, l2s_waiting
  # assumes:
  & (havoc_path -> l2s_waiting)
  & (havoc_path -> (forall V0. !l2s_w_1(V0)))
  & (havoc_path -> !l2s_w_0)
  & ((!havoc_path & havoc_path__1) -> (if havoc_path then true else l2s_frozen))
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !pc_finished(t0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  & (forall V0. l2s_g_2(V0) -> !pc_finished(V0))
  # transitions:
  & (new(l2s_a(X)) <-> if havoc_path then l2s_d(X) else l2s_a(X))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else l2s_d(T0))
  & (new(l2s_frozen) <-> if !havoc_path & havoc_path__1 then false else l2s_frozen)
  & (new(l2s_s_0) <-> if !havoc_path & havoc_path__1 then locked else l2s_s_0)
  & (new(l2s_s_1(V0)) <-> if !havoc_path & havoc_path__1 then pc_atomic_cas(V0) else l2s_s_1(V0))
  & (new(l2s_s_2(V0)) <-> if !havoc_path & havoc_path__1 then pc_atomic_store(V0) else l2s_s_2(V0))
  & (new(l2s_s_3(V0)) <-> if !havoc_path & havoc_path__1 then pc_finished(V0) else l2s_s_3(V0))
  & (new(l2s_s_4(V0)) <-> if !havoc_path & havoc_path__1 then pc_futex_wait(V0) else l2s_s_4(V0))
  & (new(l2s_s_5(V0)) <-> if !havoc_path & havoc_path__1 then pc_futex_wake(V0) else l2s_s_5(V0))
  & (new(l2s_s_6(V0)) <-> if !havoc_path & havoc_path__1 then pc_kernel_wait(V0) else l2s_s_6(V0))
  & (new(l2s_s_7(V0)) <-> if !havoc_path & havoc_path__1 then queue(V0) else l2s_s_7(V0))
  & (new(l2s_saved) <-> if !havoc_path & havoc_path__1 then true else l2s_saved)
  & (new(l2s_w_0) <-> if !havoc_path & havoc_path__1 then (!((forall T. d(T)) & !l2s_g_1)) else l2s_w_0)
  & (new(l2s_w_1(V0)) <-> if !havoc_path & havoc_path__1 then (l2s_d(V0) & (!(scheduled(V0) & !l2s_g_3(V0)))) else l2s_w_1(V0))
  & (new(l2s_waiting) <-> if havoc_path then false else l2s_waiting)
  # asserts:
  & (!__error & (!(((if !havoc_path & havoc_path__1 then true else l2s_saved) & (forall V0. !(if !havoc_path & havoc_path__1 then (l2s_d(V0) & (!(scheduled(V0) & !l2s_g_3(V0)))) else l2s_w_1(V0)))) & (!(((((((((if !havoc_path & havoc_path__1 then (!((forall T. d(T)) & !l2s_g_1)) else l2s_w_0) & (forall V0. (if havoc_path then l2s_d(V0) else l2s_a(V0)) -> ((if !havoc_path & havoc_path__1 then pc_atomic_cas(V0) else l2s_s_1(V0)) <-> pc_atomic_cas(V0)))) & (forall V0. (if havoc_path then l2s_d(V0) else l2s_a(V0)) -> ((if !havoc_path & havoc_path__1 then queue(V0) else l2s_s_7(V0)) <-> queue(V0)))) & (forall V0. (if havoc_path then l2s_d(V0) else l2s_a(V0)) -> ((if !havoc_path & havoc_path__1 then pc_atomic_store(V0) else l2s_s_2(V0)) <-> pc_atomic_store(V0)))) & (forall V0. (if havoc_path then l2s_d(V0) else l2s_a(V0)) -> ((if !havoc_path & havoc_path__1 then pc_futex_wake(V0) else l2s_s_5(V0)) <-> pc_futex_wake(V0)))) & (forall V0. (if havoc_path then l2s_d(V0) else l2s_a(V0)) -> ((if !havoc_path & havoc_path__1 then pc_kernel_wait(V0) else l2s_s_6(V0)) <-> pc_kernel_wait(V0)))) & (forall V0. (if havoc_path then l2s_d(V0) else l2s_a(V0)) -> ((if !havoc_path & havoc_path__1 then pc_futex_wait(V0) else l2s_s_4(V0)) <-> pc_futex_wait(V0)))) & ((if !havoc_path & havoc_path__1 then locked else l2s_s_0) <-> locked)) & (forall V0. (if havoc_path then l2s_d(V0) else l2s_a(V0)) -> ((if !havoc_path & havoc_path__1 then pc_finished(V0) else l2s_s_3(V0)) <-> pc_finished(V0)))))))) -> !new(__error)


safety [assertions] !__error

