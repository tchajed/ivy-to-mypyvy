---
source: tests/integration_test.rs
expression: output
---
sort thread

mutable relation _old_l2s_g_0()
mutable relation _old_l2s_g_2(?)
mutable relation _old_l2s_g_3(?)
mutable relation _old_l2s_g_4(?)
mutable relation d(?)
mutable relation finished(thread)
mutable relation futex_wait(thread)
mutable relation futex_wake(thread)
mutable relation kernel_wait(thread)
mutable relation l2s_a(thread)
mutable relation l2s_d(?)
mutable relation l2s_frozen()
mutable relation l2s_g_0()
mutable relation l2s_g_1
mutable relation l2s_g_2(?)
mutable relation l2s_g_3(?)
mutable relation l2s_g_4(?)
mutable relation l2s_s_0()
mutable relation l2s_s_1()
mutable relation l2s_s_10(?)
mutable relation l2s_s_11(?)
mutable relation l2s_s_12(?)
mutable relation l2s_s_2()
mutable relation l2s_s_3(?)
mutable relation l2s_s_4(?)
mutable relation l2s_s_5(?)
mutable relation l2s_s_6(?)
mutable relation l2s_s_7(?)
mutable relation l2s_s_8(?)
mutable relation l2s_s_9(?)
mutable relation l2s_saved()
mutable relation l2s_w_0()
mutable relation l2s_w_1(?)
mutable relation l2s_waiting()
mutable relation lock_acq(thread)
mutable relation lock_acq2(thread)
mutable relation lock_free()
mutable relation lock_set_wait(thread)
mutable relation lock_w0()
mutable relation lock_ws()
mutable relation queue(?)
mutable relation scheduled(?)
mutable relation unlock_store(thread)
mutable relation unlock_sub(thread)
mutable relation havoc_l2s_g_0()
mutable relation havoc_l2s_g_0__1()
mutable relation havoc_l2s_g_0__2()
mutable relation havoc_l2s_g_2(?)
mutable relation havoc_l2s_g_2__1(?)
mutable relation havoc_l2s_g_2__2(?)
mutable relation havoc_l2s_g_3(?)
mutable relation havoc_l2s_g_3__1(?)
mutable relation havoc_l2s_g_3__10(?)
mutable relation havoc_l2s_g_3__11(?)
mutable relation havoc_l2s_g_3__12(?)
mutable relation havoc_l2s_g_3__13(?)
mutable relation havoc_l2s_g_3__14(?)
mutable relation havoc_l2s_g_3__15(?)
mutable relation havoc_l2s_g_3__16(?)
mutable relation havoc_l2s_g_3__17(?)
mutable relation havoc_l2s_g_3__18(?)
mutable relation havoc_l2s_g_3__19(?)
mutable relation havoc_l2s_g_3__2(?)
mutable relation havoc_l2s_g_3__20(?)
mutable relation havoc_l2s_g_3__21(?)
mutable relation havoc_l2s_g_3__22(?)
mutable relation havoc_l2s_g_3__23(?)
mutable relation havoc_l2s_g_3__24(?)
mutable relation havoc_l2s_g_3__25(?)
mutable relation havoc_l2s_g_3__26(?)
mutable relation havoc_l2s_g_3__27(?)
mutable relation havoc_l2s_g_3__28(?)
mutable relation havoc_l2s_g_3__29(?)
mutable relation havoc_l2s_g_3__3(?)
mutable relation havoc_l2s_g_3__30(?)
mutable relation havoc_l2s_g_3__31(?)
mutable relation havoc_l2s_g_3__32(?)
mutable relation havoc_l2s_g_3__33(?)
mutable relation havoc_l2s_g_3__34(?)
mutable relation havoc_l2s_g_3__35(?)
mutable relation havoc_l2s_g_3__36(?)
mutable relation havoc_l2s_g_3__37(?)
mutable relation havoc_l2s_g_3__38(?)
mutable relation havoc_l2s_g_3__39(?)
mutable relation havoc_l2s_g_3__4(?)
mutable relation havoc_l2s_g_3__40(?)
mutable relation havoc_l2s_g_3__41(?)
mutable relation havoc_l2s_g_3__42(?)
mutable relation havoc_l2s_g_3__43(?)
mutable relation havoc_l2s_g_3__44(?)
mutable relation havoc_l2s_g_3__45(?)
mutable relation havoc_l2s_g_3__5(?)
mutable relation havoc_l2s_g_3__6(?)
mutable relation havoc_l2s_g_3__7(?)
mutable relation havoc_l2s_g_3__8(?)
mutable relation havoc_l2s_g_3__9(?)
mutable relation havoc_l2s_g_4(?)
mutable relation havoc_l2s_g_4__1(?)
mutable relation havoc_l2s_g_4__10(?)
mutable relation havoc_l2s_g_4__11(?)
mutable relation havoc_l2s_g_4__12(?)
mutable relation havoc_l2s_g_4__13(?)
mutable relation havoc_l2s_g_4__14(?)
mutable relation havoc_l2s_g_4__15(?)
mutable relation havoc_l2s_g_4__16(?)
mutable relation havoc_l2s_g_4__17(?)
mutable relation havoc_l2s_g_4__18(?)
mutable relation havoc_l2s_g_4__19(?)
mutable relation havoc_l2s_g_4__2(?)
mutable relation havoc_l2s_g_4__20(?)
mutable relation havoc_l2s_g_4__21(?)
mutable relation havoc_l2s_g_4__22(?)
mutable relation havoc_l2s_g_4__23(?)
mutable relation havoc_l2s_g_4__24(?)
mutable relation havoc_l2s_g_4__25(?)
mutable relation havoc_l2s_g_4__26(?)
mutable relation havoc_l2s_g_4__27(?)
mutable relation havoc_l2s_g_4__28(?)
mutable relation havoc_l2s_g_4__29(?)
mutable relation havoc_l2s_g_4__3(?)
mutable relation havoc_l2s_g_4__30(?)
mutable relation havoc_l2s_g_4__31(?)
mutable relation havoc_l2s_g_4__32(?)
mutable relation havoc_l2s_g_4__33(?)
mutable relation havoc_l2s_g_4__34(?)
mutable relation havoc_l2s_g_4__35(?)
mutable relation havoc_l2s_g_4__36(?)
mutable relation havoc_l2s_g_4__37(?)
mutable relation havoc_l2s_g_4__38(?)
mutable relation havoc_l2s_g_4__39(?)
mutable relation havoc_l2s_g_4__4(?)
mutable relation havoc_l2s_g_4__40(?)
mutable relation havoc_l2s_g_4__41(?)
mutable relation havoc_l2s_g_4__42(?)
mutable relation havoc_l2s_g_4__43(?)
mutable relation havoc_l2s_g_4__44(?)
mutable relation havoc_l2s_g_4__45(?)
mutable relation havoc_l2s_g_4__5(?)
mutable relation havoc_l2s_g_4__6(?)
mutable relation havoc_l2s_g_4__7(?)
mutable relation havoc_l2s_g_4__8(?)
mutable relation havoc_l2s_g_4__9(?)
mutable relation __error

init !__error
init lock_acq(T) <-> true
init lock_set_wait(T) <-> false
init futex_wait(T) <-> false
init kernel_wait(T) <-> false
init lock_acq2(T) <-> false
init unlock_sub(T) <-> false
init unlock_store(T) <-> false
init futex_wake(T) <-> false
init finished(T) <-> false
init lock_free <-> true
init lock_w0 <-> false
init lock_ws <-> false
init queue(T) <-> false
init scheduled(T) <-> false
init d(T) <-> false
init l2s_waiting <-> true
init l2s_frozen <-> false
init l2s_saved <-> false
init l2s_d(t0) <-> true
init l2s_w_1(V0) <-> ((l2s_d(V0) & !scheduled(V0)) & !l2s_g_3(V0))
init l2s_w_0 <-> ((!(forall T. d(T))) & !l2s_g_1)
init (l2s_g_1 -> (!(forall T. d(T))))
init (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
init (l2s_g_0 -> !finished(t0))
init (forall V0. l2s_g_2(V0) -> !finished(V0))
init (forall V0. l2s_g_3(V0) -> !scheduled(V0))
init (!(((exists T0. l2s_g_2(T0)) -> (l2s_g_0 & !l2s_g_1)) -> ((forall T. l2s_g_4(T)) -> (forall T. !l2s_g_2(T)))))

transition step_unlock_store(t)
  modifies _old_l2s_g_3, _old_l2s_g_4, futex_wake, l2s_d, l2s_g_3, l2s_g_4, l2s_w_1, lock_free, lock_w0, lock_ws, scheduled, unlock_store
  # assumes:
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !finished(t0))
  & (forall V0. l2s_g_2(V0) -> !finished(V0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  & unlock_store(t)
  & (forall V0. l2s_g_3(V0) -> havoc_l2s_g_3(V0))
  & (forall V0. (!l2s_g_3(V0) & !scheduled(V0)) -> !havoc_l2s_g_3(V0))
  & (forall V0. l2s_g_4(V0) -> havoc_l2s_g_4(V0))
  & (forall V0. (!l2s_g_4(V0) & !havoc_l2s_g_3(V0)) -> !havoc_l2s_g_4(V0))
  & (forall V0. havoc_l2s_g_3(V0) -> (!(V0 = t)))
  & (forall V0. havoc_l2s_g_4(V0) -> !havoc_l2s_g_3(V0))
  & (forall V0. havoc_l2s_g_3(V0) -> havoc_l2s_g_3__1(V0))
  & (forall V0. (!havoc_l2s_g_3(V0) & (!(V0 = t))) -> !havoc_l2s_g_3__1(V0))
  & (forall V0. havoc_l2s_g_4(V0) -> havoc_l2s_g_4__1(V0))
  & (forall V0. (!havoc_l2s_g_4(V0) & !havoc_l2s_g_3__1(V0)) -> !havoc_l2s_g_4__1(V0))
  & (forall V0. havoc_l2s_g_3__1(V0) -> !false)
  & (forall V0. havoc_l2s_g_4__1(V0) -> !havoc_l2s_g_3__1(V0))
  # transitions:
  & (new(_old_l2s_g_3(V0)) <-> havoc_l2s_g_3(V0))
  & (new(_old_l2s_g_4(V0)) <-> havoc_l2s_g_4(V0))
  & (new(futex_wake(T)) <-> if T = t then true else futex_wake(T))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else (if T0 = t then true else l2s_d(T0)))
  & (new(l2s_g_3(V0)) <-> havoc_l2s_g_3__1(V0))
  & (new(l2s_g_4(V0)) <-> havoc_l2s_g_4__1(V0))
  & (new(l2s_w_1(V0)) <-> (((l2s_w_1(V0) & (!(V0 = t))) & !havoc_l2s_g_3(V0)) & !false) & !havoc_l2s_g_3__1(V0))
  & (new(lock_free) <-> true)
  & (new(lock_w0) <-> false)
  & (new(lock_ws) <-> false)
  & (new(scheduled(T)) <-> false)
  & (new(unlock_store(T)) <-> if T = t then false else unlock_store(T))

transition step_lock_set_wait_then(t)
  modifies _old_l2s_g_3, _old_l2s_g_4, l2s_d, l2s_g_3, l2s_g_4, l2s_w_1, lock_acq2, lock_set_wait, scheduled
  # assumes:
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !finished(t0))
  & (forall V0. l2s_g_2(V0) -> !finished(V0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  & lock_set_wait(t)
  & lock_free
  & (forall V0. l2s_g_3(V0) -> havoc_l2s_g_3__2(V0))
  & (forall V0. (!l2s_g_3(V0) & !scheduled(V0)) -> !havoc_l2s_g_3__2(V0))
  & (forall V0. l2s_g_4(V0) -> havoc_l2s_g_4__2(V0))
  & (forall V0. (!l2s_g_4(V0) & !havoc_l2s_g_3__2(V0)) -> !havoc_l2s_g_4__2(V0))
  & (forall V0. havoc_l2s_g_3__2(V0) -> (!(V0 = t)))
  & (forall V0. havoc_l2s_g_4__2(V0) -> !havoc_l2s_g_3__2(V0))
  & (forall V0. havoc_l2s_g_3__2(V0) -> havoc_l2s_g_3__3(V0))
  & (forall V0. (!havoc_l2s_g_3__2(V0) & (!(V0 = t))) -> !havoc_l2s_g_3__3(V0))
  & (forall V0. havoc_l2s_g_4__2(V0) -> havoc_l2s_g_4__3(V0))
  & (forall V0. (!havoc_l2s_g_4__2(V0) & !havoc_l2s_g_3__3(V0)) -> !havoc_l2s_g_4__3(V0))
  & (forall V0. havoc_l2s_g_3__3(V0) -> !false)
  & (forall V0. havoc_l2s_g_4__3(V0) -> !havoc_l2s_g_3__3(V0))
  # transitions:
  & (new(_old_l2s_g_3(V0)) <-> havoc_l2s_g_3__2(V0))
  & (new(_old_l2s_g_4(V0)) <-> havoc_l2s_g_4__2(V0))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else (if T0 = t then true else l2s_d(T0)))
  & (new(l2s_g_3(V0)) <-> havoc_l2s_g_3__3(V0))
  & (new(l2s_g_4(V0)) <-> havoc_l2s_g_4__3(V0))
  & (new(l2s_w_1(V0)) <-> (((l2s_w_1(V0) & (!(V0 = t))) & !havoc_l2s_g_3__2(V0)) & !false) & !havoc_l2s_g_3__3(V0))
  & (new(lock_acq2(T)) <-> if T = t then true else lock_acq2(T))
  & (new(lock_set_wait(T)) <-> if T = t then false else lock_set_wait(T))
  & (new(scheduled(T)) <-> false)

transition step_lock_set_wait_else_then(t)
  modifies _old_l2s_g_3, _old_l2s_g_4, futex_wait, l2s_d, l2s_g_3, l2s_g_4, l2s_w_1, lock_set_wait, lock_w0, lock_ws, scheduled
  # assumes:
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !finished(t0))
  & (forall V0. l2s_g_2(V0) -> !finished(V0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  & lock_set_wait(t)
  & !lock_free
  & lock_w0
  & (forall V0. l2s_g_3(V0) -> havoc_l2s_g_3__4(V0))
  & (forall V0. (!l2s_g_3(V0) & !scheduled(V0)) -> !havoc_l2s_g_3__4(V0))
  & (forall V0. l2s_g_4(V0) -> havoc_l2s_g_4__4(V0))
  & (forall V0. (!l2s_g_4(V0) & !havoc_l2s_g_3__4(V0)) -> !havoc_l2s_g_4__4(V0))
  & (forall V0. havoc_l2s_g_3__4(V0) -> (!(V0 = t)))
  & (forall V0. havoc_l2s_g_4__4(V0) -> !havoc_l2s_g_3__4(V0))
  & (forall V0. havoc_l2s_g_3__4(V0) -> havoc_l2s_g_3__5(V0))
  & (forall V0. (!havoc_l2s_g_3__4(V0) & (!(V0 = t))) -> !havoc_l2s_g_3__5(V0))
  & (forall V0. havoc_l2s_g_4__4(V0) -> havoc_l2s_g_4__5(V0))
  & (forall V0. (!havoc_l2s_g_4__4(V0) & !havoc_l2s_g_3__5(V0)) -> !havoc_l2s_g_4__5(V0))
  & (forall V0. havoc_l2s_g_3__5(V0) -> !false)
  & (forall V0. havoc_l2s_g_4__5(V0) -> !havoc_l2s_g_3__5(V0))
  # transitions:
  & (new(_old_l2s_g_3(V0)) <-> havoc_l2s_g_3__4(V0))
  & (new(_old_l2s_g_4(V0)) <-> havoc_l2s_g_4__4(V0))
  & (new(futex_wait(T)) <-> if T = t then true else futex_wait(T))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else (if T0 = t then true else l2s_d(T0)))
  & (new(l2s_g_3(V0)) <-> havoc_l2s_g_3__5(V0))
  & (new(l2s_g_4(V0)) <-> havoc_l2s_g_4__5(V0))
  & (new(l2s_w_1(V0)) <-> (((l2s_w_1(V0) & (!(V0 = t))) & !havoc_l2s_g_3__4(V0)) & !false) & !havoc_l2s_g_3__5(V0))
  & (new(lock_set_wait(T)) <-> if T = t then false else lock_set_wait(T))
  & (new(lock_w0) <-> false)
  & (new(lock_ws) <-> true)
  & (new(scheduled(T)) <-> false)

transition step_lock_set_wait_else_else_then(t)
  modifies _old_l2s_g_3, _old_l2s_g_4, futex_wait, l2s_d, l2s_g_3, l2s_g_4, l2s_w_1, lock_set_wait, scheduled
  # assumes:
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !finished(t0))
  & (forall V0. l2s_g_2(V0) -> !finished(V0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  & lock_set_wait(t)
  & !lock_free
  & !lock_w0
  & lock_ws
  & (forall V0. l2s_g_3(V0) -> havoc_l2s_g_3__6(V0))
  & (forall V0. (!l2s_g_3(V0) & !scheduled(V0)) -> !havoc_l2s_g_3__6(V0))
  & (forall V0. l2s_g_4(V0) -> havoc_l2s_g_4__6(V0))
  & (forall V0. (!l2s_g_4(V0) & !havoc_l2s_g_3__6(V0)) -> !havoc_l2s_g_4__6(V0))
  & (forall V0. havoc_l2s_g_3__6(V0) -> (!(V0 = t)))
  & (forall V0. havoc_l2s_g_4__6(V0) -> !havoc_l2s_g_3__6(V0))
  & (forall V0. havoc_l2s_g_3__6(V0) -> havoc_l2s_g_3__7(V0))
  & (forall V0. (!havoc_l2s_g_3__6(V0) & (!(V0 = t))) -> !havoc_l2s_g_3__7(V0))
  & (forall V0. havoc_l2s_g_4__6(V0) -> havoc_l2s_g_4__7(V0))
  & (forall V0. (!havoc_l2s_g_4__6(V0) & !havoc_l2s_g_3__7(V0)) -> !havoc_l2s_g_4__7(V0))
  & (forall V0. havoc_l2s_g_3__7(V0) -> !false)
  & (forall V0. havoc_l2s_g_4__7(V0) -> !havoc_l2s_g_3__7(V0))
  # transitions:
  & (new(_old_l2s_g_3(V0)) <-> havoc_l2s_g_3__6(V0))
  & (new(_old_l2s_g_4(V0)) <-> havoc_l2s_g_4__6(V0))
  & (new(futex_wait(T)) <-> if T = t then true else futex_wait(T))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else (if T0 = t then true else l2s_d(T0)))
  & (new(l2s_g_3(V0)) <-> havoc_l2s_g_3__7(V0))
  & (new(l2s_g_4(V0)) <-> havoc_l2s_g_4__7(V0))
  & (new(l2s_w_1(V0)) <-> (((l2s_w_1(V0) & (!(V0 = t))) & !havoc_l2s_g_3__6(V0)) & !false) & !havoc_l2s_g_3__7(V0))
  & (new(lock_set_wait(T)) <-> if T = t then false else lock_set_wait(T))
  & (new(scheduled(T)) <-> false)

transition step_lock_set_wait_else_else_else(t)
  modifies _old_l2s_g_3, _old_l2s_g_4, l2s_d, l2s_g_3, l2s_g_4, l2s_w_1, lock_set_wait, scheduled
  # assumes:
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !finished(t0))
  & (forall V0. l2s_g_2(V0) -> !finished(V0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  & lock_set_wait(t)
  & !lock_free
  & !lock_w0
  & !lock_ws
  & (forall V0. l2s_g_3(V0) -> havoc_l2s_g_3__8(V0))
  & (forall V0. (!l2s_g_3(V0) & !scheduled(V0)) -> !havoc_l2s_g_3__8(V0))
  & (forall V0. l2s_g_4(V0) -> havoc_l2s_g_4__8(V0))
  & (forall V0. (!l2s_g_4(V0) & !havoc_l2s_g_3__8(V0)) -> !havoc_l2s_g_4__8(V0))
  & (forall V0. havoc_l2s_g_3__8(V0) -> (!(V0 = t)))
  & (forall V0. havoc_l2s_g_4__8(V0) -> !havoc_l2s_g_3__8(V0))
  & (forall V0. havoc_l2s_g_3__8(V0) -> havoc_l2s_g_3__9(V0))
  & (forall V0. (!havoc_l2s_g_3__8(V0) & (!(V0 = t))) -> !havoc_l2s_g_3__9(V0))
  & (forall V0. havoc_l2s_g_4__8(V0) -> havoc_l2s_g_4__9(V0))
  & (forall V0. (!havoc_l2s_g_4__8(V0) & !havoc_l2s_g_3__9(V0)) -> !havoc_l2s_g_4__9(V0))
  & (forall V0. havoc_l2s_g_3__9(V0) -> !false)
  & (forall V0. havoc_l2s_g_4__9(V0) -> !havoc_l2s_g_3__9(V0))
  # transitions:
  & (new(_old_l2s_g_3(V0)) <-> havoc_l2s_g_3__8(V0))
  & (new(_old_l2s_g_4(V0)) <-> havoc_l2s_g_4__8(V0))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else (if T0 = t then true else l2s_d(T0)))
  & (new(l2s_g_3(V0)) <-> havoc_l2s_g_3__9(V0))
  & (new(l2s_g_4(V0)) <-> havoc_l2s_g_4__9(V0))
  & (new(l2s_w_1(V0)) <-> (((l2s_w_1(V0) & (!(V0 = t))) & !havoc_l2s_g_3__8(V0)) & !false) & !havoc_l2s_g_3__9(V0))
  & (new(lock_set_wait(T)) <-> if T = t then false else lock_set_wait(T))
  & (new(scheduled(T)) <-> false)

transition step_lock_acq2_then(t)
  modifies _old_l2s_g_3, _old_l2s_g_4, l2s_d, l2s_g_3, l2s_g_4, l2s_w_1, lock_acq2, lock_free, lock_ws, scheduled, unlock_sub
  # assumes:
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !finished(t0))
  & (forall V0. l2s_g_2(V0) -> !finished(V0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  & lock_acq2(t)
  & lock_free
  & (forall V0. l2s_g_3(V0) -> havoc_l2s_g_3__10(V0))
  & (forall V0. (!l2s_g_3(V0) & !scheduled(V0)) -> !havoc_l2s_g_3__10(V0))
  & (forall V0. l2s_g_4(V0) -> havoc_l2s_g_4__10(V0))
  & (forall V0. (!l2s_g_4(V0) & !havoc_l2s_g_3__10(V0)) -> !havoc_l2s_g_4__10(V0))
  & (forall V0. havoc_l2s_g_3__10(V0) -> (!(V0 = t)))
  & (forall V0. havoc_l2s_g_4__10(V0) -> !havoc_l2s_g_3__10(V0))
  & (forall V0. havoc_l2s_g_3__10(V0) -> havoc_l2s_g_3__11(V0))
  & (forall V0. (!havoc_l2s_g_3__10(V0) & (!(V0 = t))) -> !havoc_l2s_g_3__11(V0))
  & (forall V0. havoc_l2s_g_4__10(V0) -> havoc_l2s_g_4__11(V0))
  & (forall V0. (!havoc_l2s_g_4__10(V0) & !havoc_l2s_g_3__11(V0)) -> !havoc_l2s_g_4__11(V0))
  & (forall V0. havoc_l2s_g_3__11(V0) -> !false)
  & (forall V0. havoc_l2s_g_4__11(V0) -> !havoc_l2s_g_3__11(V0))
  # transitions:
  & (new(_old_l2s_g_3(V0)) <-> havoc_l2s_g_3__10(V0))
  & (new(_old_l2s_g_4(V0)) <-> havoc_l2s_g_4__10(V0))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else (if T0 = t then true else l2s_d(T0)))
  & (new(l2s_g_3(V0)) <-> havoc_l2s_g_3__11(V0))
  & (new(l2s_g_4(V0)) <-> havoc_l2s_g_4__11(V0))
  & (new(l2s_w_1(V0)) <-> (((l2s_w_1(V0) & (!(V0 = t))) & !havoc_l2s_g_3__10(V0)) & !false) & !havoc_l2s_g_3__11(V0))
  & (new(lock_acq2(T)) <-> if T = t then false else lock_acq2(T))
  & (new(lock_free) <-> false)
  & (new(lock_ws) <-> true)
  & (new(scheduled(T)) <-> false)
  & (new(unlock_sub(T)) <-> if T = t then true else unlock_sub(T))

transition step_lock_acq2_else_then(t)
  modifies _old_l2s_g_3, _old_l2s_g_4, l2s_d, l2s_g_3, l2s_g_4, l2s_w_1, lock_acq2, lock_set_wait, scheduled
  # assumes:
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !finished(t0))
  & (forall V0. l2s_g_2(V0) -> !finished(V0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  & lock_acq2(t)
  & !lock_free
  & lock_w0
  & (forall V0. l2s_g_3(V0) -> havoc_l2s_g_3__12(V0))
  & (forall V0. (!l2s_g_3(V0) & !scheduled(V0)) -> !havoc_l2s_g_3__12(V0))
  & (forall V0. l2s_g_4(V0) -> havoc_l2s_g_4__12(V0))
  & (forall V0. (!l2s_g_4(V0) & !havoc_l2s_g_3__12(V0)) -> !havoc_l2s_g_4__12(V0))
  & (forall V0. havoc_l2s_g_3__12(V0) -> (!(V0 = t)))
  & (forall V0. havoc_l2s_g_4__12(V0) -> !havoc_l2s_g_3__12(V0))
  & (forall V0. havoc_l2s_g_3__12(V0) -> havoc_l2s_g_3__13(V0))
  & (forall V0. (!havoc_l2s_g_3__12(V0) & (!(V0 = t))) -> !havoc_l2s_g_3__13(V0))
  & (forall V0. havoc_l2s_g_4__12(V0) -> havoc_l2s_g_4__13(V0))
  & (forall V0. (!havoc_l2s_g_4__12(V0) & !havoc_l2s_g_3__13(V0)) -> !havoc_l2s_g_4__13(V0))
  & (forall V0. havoc_l2s_g_3__13(V0) -> !false)
  & (forall V0. havoc_l2s_g_4__13(V0) -> !havoc_l2s_g_3__13(V0))
  # transitions:
  & (new(_old_l2s_g_3(V0)) <-> havoc_l2s_g_3__12(V0))
  & (new(_old_l2s_g_4(V0)) <-> havoc_l2s_g_4__12(V0))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else (if T0 = t then true else l2s_d(T0)))
  & (new(l2s_g_3(V0)) <-> havoc_l2s_g_3__13(V0))
  & (new(l2s_g_4(V0)) <-> havoc_l2s_g_4__13(V0))
  & (new(l2s_w_1(V0)) <-> (((l2s_w_1(V0) & (!(V0 = t))) & !havoc_l2s_g_3__12(V0)) & !false) & !havoc_l2s_g_3__13(V0))
  & (new(lock_acq2(T)) <-> if T = t then false else lock_acq2(T))
  & (new(lock_set_wait(T)) <-> if T = t then true else lock_set_wait(T))
  & (new(scheduled(T)) <-> false)

transition step_lock_acq2_else_else_then(t)
  modifies _old_l2s_g_3, _old_l2s_g_4, futex_wait, l2s_d, l2s_g_3, l2s_g_4, l2s_w_1, lock_acq2, scheduled
  # assumes:
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !finished(t0))
  & (forall V0. l2s_g_2(V0) -> !finished(V0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  & lock_acq2(t)
  & !lock_free
  & !lock_w0
  & lock_ws
  & (forall V0. l2s_g_3(V0) -> havoc_l2s_g_3__14(V0))
  & (forall V0. (!l2s_g_3(V0) & !scheduled(V0)) -> !havoc_l2s_g_3__14(V0))
  & (forall V0. l2s_g_4(V0) -> havoc_l2s_g_4__14(V0))
  & (forall V0. (!l2s_g_4(V0) & !havoc_l2s_g_3__14(V0)) -> !havoc_l2s_g_4__14(V0))
  & (forall V0. havoc_l2s_g_3__14(V0) -> (!(V0 = t)))
  & (forall V0. havoc_l2s_g_4__14(V0) -> !havoc_l2s_g_3__14(V0))
  & (forall V0. havoc_l2s_g_3__14(V0) -> havoc_l2s_g_3__15(V0))
  & (forall V0. (!havoc_l2s_g_3__14(V0) & (!(V0 = t))) -> !havoc_l2s_g_3__15(V0))
  & (forall V0. havoc_l2s_g_4__14(V0) -> havoc_l2s_g_4__15(V0))
  & (forall V0. (!havoc_l2s_g_4__14(V0) & !havoc_l2s_g_3__15(V0)) -> !havoc_l2s_g_4__15(V0))
  & (forall V0. havoc_l2s_g_3__15(V0) -> !false)
  & (forall V0. havoc_l2s_g_4__15(V0) -> !havoc_l2s_g_3__15(V0))
  # transitions:
  & (new(_old_l2s_g_3(V0)) <-> havoc_l2s_g_3__14(V0))
  & (new(_old_l2s_g_4(V0)) <-> havoc_l2s_g_4__14(V0))
  & (new(futex_wait(T)) <-> if T = t then true else futex_wait(T))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else (if T0 = t then true else l2s_d(T0)))
  & (new(l2s_g_3(V0)) <-> havoc_l2s_g_3__15(V0))
  & (new(l2s_g_4(V0)) <-> havoc_l2s_g_4__15(V0))
  & (new(l2s_w_1(V0)) <-> (((l2s_w_1(V0) & (!(V0 = t))) & !havoc_l2s_g_3__14(V0)) & !false) & !havoc_l2s_g_3__15(V0))
  & (new(lock_acq2(T)) <-> if T = t then false else lock_acq2(T))
  & (new(scheduled(T)) <-> false)

transition step_lock_acq2_else_else_else(t)
  modifies _old_l2s_g_3, _old_l2s_g_4, l2s_d, l2s_g_3, l2s_g_4, l2s_w_1, lock_acq2, scheduled
  # assumes:
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !finished(t0))
  & (forall V0. l2s_g_2(V0) -> !finished(V0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  & lock_acq2(t)
  & !lock_free
  & !lock_w0
  & !lock_ws
  & (forall V0. l2s_g_3(V0) -> havoc_l2s_g_3__16(V0))
  & (forall V0. (!l2s_g_3(V0) & !scheduled(V0)) -> !havoc_l2s_g_3__16(V0))
  & (forall V0. l2s_g_4(V0) -> havoc_l2s_g_4__16(V0))
  & (forall V0. (!l2s_g_4(V0) & !havoc_l2s_g_3__16(V0)) -> !havoc_l2s_g_4__16(V0))
  & (forall V0. havoc_l2s_g_3__16(V0) -> (!(V0 = t)))
  & (forall V0. havoc_l2s_g_4__16(V0) -> !havoc_l2s_g_3__16(V0))
  & (forall V0. havoc_l2s_g_3__16(V0) -> havoc_l2s_g_3__17(V0))
  & (forall V0. (!havoc_l2s_g_3__16(V0) & (!(V0 = t))) -> !havoc_l2s_g_3__17(V0))
  & (forall V0. havoc_l2s_g_4__16(V0) -> havoc_l2s_g_4__17(V0))
  & (forall V0. (!havoc_l2s_g_4__16(V0) & !havoc_l2s_g_3__17(V0)) -> !havoc_l2s_g_4__17(V0))
  & (forall V0. havoc_l2s_g_3__17(V0) -> !false)
  & (forall V0. havoc_l2s_g_4__17(V0) -> !havoc_l2s_g_3__17(V0))
  # transitions:
  & (new(_old_l2s_g_3(V0)) <-> havoc_l2s_g_3__16(V0))
  & (new(_old_l2s_g_4(V0)) <-> havoc_l2s_g_4__16(V0))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else (if T0 = t then true else l2s_d(T0)))
  & (new(l2s_g_3(V0)) <-> havoc_l2s_g_3__17(V0))
  & (new(l2s_g_4(V0)) <-> havoc_l2s_g_4__17(V0))
  & (new(l2s_w_1(V0)) <-> (((l2s_w_1(V0) & (!(V0 = t))) & !havoc_l2s_g_3__16(V0)) & !false) & !havoc_l2s_g_3__17(V0))
  & (new(lock_acq2(T)) <-> if T = t then false else lock_acq2(T))
  & (new(scheduled(T)) <-> false)

transition step_futex_wait_then(t)
  modifies _old_l2s_g_3, _old_l2s_g_4, futex_wait, kernel_wait, l2s_d, l2s_g_3, l2s_g_4, l2s_w_1, queue, scheduled
  # assumes:
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !finished(t0))
  & (forall V0. l2s_g_2(V0) -> !finished(V0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  & futex_wait(t)
  & lock_ws
  & (forall V0. l2s_g_3(V0) -> havoc_l2s_g_3__18(V0))
  & (forall V0. (!l2s_g_3(V0) & !scheduled(V0)) -> !havoc_l2s_g_3__18(V0))
  & (forall V0. l2s_g_4(V0) -> havoc_l2s_g_4__18(V0))
  & (forall V0. (!l2s_g_4(V0) & !havoc_l2s_g_3__18(V0)) -> !havoc_l2s_g_4__18(V0))
  & (forall V0. havoc_l2s_g_3__18(V0) -> (!(V0 = t)))
  & (forall V0. havoc_l2s_g_4__18(V0) -> !havoc_l2s_g_3__18(V0))
  & (forall V0. havoc_l2s_g_3__18(V0) -> havoc_l2s_g_3__19(V0))
  & (forall V0. (!havoc_l2s_g_3__18(V0) & (!(V0 = t))) -> !havoc_l2s_g_3__19(V0))
  & (forall V0. havoc_l2s_g_4__18(V0) -> havoc_l2s_g_4__19(V0))
  & (forall V0. (!havoc_l2s_g_4__18(V0) & !havoc_l2s_g_3__19(V0)) -> !havoc_l2s_g_4__19(V0))
  & (forall V0. havoc_l2s_g_3__19(V0) -> !false)
  & (forall V0. havoc_l2s_g_4__19(V0) -> !havoc_l2s_g_3__19(V0))
  # transitions:
  & (new(_old_l2s_g_3(V0)) <-> havoc_l2s_g_3__18(V0))
  & (new(_old_l2s_g_4(V0)) <-> havoc_l2s_g_4__18(V0))
  & (new(futex_wait(T)) <-> if T = t then false else futex_wait(T))
  & (new(kernel_wait(T)) <-> if T = t then true else kernel_wait(T))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else (if T0 = t then true else l2s_d(T0)))
  & (new(l2s_g_3(V0)) <-> havoc_l2s_g_3__19(V0))
  & (new(l2s_g_4(V0)) <-> havoc_l2s_g_4__19(V0))
  & (new(l2s_w_1(V0)) <-> (((l2s_w_1(V0) & (!(V0 = t))) & !havoc_l2s_g_3__18(V0)) & !false) & !havoc_l2s_g_3__19(V0))
  & (new(queue(T)) <-> if T = t then true else queue(T))
  & (new(scheduled(T)) <-> false)

transition step_futex_wait_else(t)
  modifies _old_l2s_g_3, _old_l2s_g_4, futex_wait, l2s_d, l2s_g_3, l2s_g_4, l2s_w_1, lock_acq2, scheduled
  # assumes:
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !finished(t0))
  & (forall V0. l2s_g_2(V0) -> !finished(V0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  & futex_wait(t)
  & !lock_ws
  & (forall V0. l2s_g_3(V0) -> havoc_l2s_g_3__20(V0))
  & (forall V0. (!l2s_g_3(V0) & !scheduled(V0)) -> !havoc_l2s_g_3__20(V0))
  & (forall V0. l2s_g_4(V0) -> havoc_l2s_g_4__20(V0))
  & (forall V0. (!l2s_g_4(V0) & !havoc_l2s_g_3__20(V0)) -> !havoc_l2s_g_4__20(V0))
  & (forall V0. havoc_l2s_g_3__20(V0) -> (!(V0 = t)))
  & (forall V0. havoc_l2s_g_4__20(V0) -> !havoc_l2s_g_3__20(V0))
  & (forall V0. havoc_l2s_g_3__20(V0) -> havoc_l2s_g_3__21(V0))
  & (forall V0. (!havoc_l2s_g_3__20(V0) & (!(V0 = t))) -> !havoc_l2s_g_3__21(V0))
  & (forall V0. havoc_l2s_g_4__20(V0) -> havoc_l2s_g_4__21(V0))
  & (forall V0. (!havoc_l2s_g_4__20(V0) & !havoc_l2s_g_3__21(V0)) -> !havoc_l2s_g_4__21(V0))
  & (forall V0. havoc_l2s_g_3__21(V0) -> !false)
  & (forall V0. havoc_l2s_g_4__21(V0) -> !havoc_l2s_g_3__21(V0))
  # transitions:
  & (new(_old_l2s_g_3(V0)) <-> havoc_l2s_g_3__20(V0))
  & (new(_old_l2s_g_4(V0)) <-> havoc_l2s_g_4__20(V0))
  & (new(futex_wait(T)) <-> if T = t then false else futex_wait(T))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else (if T0 = t then true else l2s_d(T0)))
  & (new(l2s_g_3(V0)) <-> havoc_l2s_g_3__21(V0))
  & (new(l2s_g_4(V0)) <-> havoc_l2s_g_4__21(V0))
  & (new(l2s_w_1(V0)) <-> (((l2s_w_1(V0) & (!(V0 = t))) & !havoc_l2s_g_3__20(V0)) & !false) & !havoc_l2s_g_3__21(V0))
  & (new(lock_acq2(T)) <-> if T = t then true else lock_acq2(T))
  & (new(scheduled(T)) <-> false)

transition step_lock_acq_then(t)
  modifies _old_l2s_g_3, _old_l2s_g_4, l2s_d, l2s_g_3, l2s_g_4, l2s_w_1, lock_acq, lock_free, lock_w0, scheduled, unlock_sub
  # assumes:
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !finished(t0))
  & (forall V0. l2s_g_2(V0) -> !finished(V0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  & lock_acq(t)
  & lock_free
  & (forall V0. l2s_g_3(V0) -> havoc_l2s_g_3__22(V0))
  & (forall V0. (!l2s_g_3(V0) & !scheduled(V0)) -> !havoc_l2s_g_3__22(V0))
  & (forall V0. l2s_g_4(V0) -> havoc_l2s_g_4__22(V0))
  & (forall V0. (!l2s_g_4(V0) & !havoc_l2s_g_3__22(V0)) -> !havoc_l2s_g_4__22(V0))
  & (forall V0. havoc_l2s_g_3__22(V0) -> (!(V0 = t)))
  & (forall V0. havoc_l2s_g_4__22(V0) -> !havoc_l2s_g_3__22(V0))
  & (forall V0. havoc_l2s_g_3__22(V0) -> havoc_l2s_g_3__23(V0))
  & (forall V0. (!havoc_l2s_g_3__22(V0) & (!(V0 = t))) -> !havoc_l2s_g_3__23(V0))
  & (forall V0. havoc_l2s_g_4__22(V0) -> havoc_l2s_g_4__23(V0))
  & (forall V0. (!havoc_l2s_g_4__22(V0) & !havoc_l2s_g_3__23(V0)) -> !havoc_l2s_g_4__23(V0))
  & (forall V0. havoc_l2s_g_3__23(V0) -> !false)
  & (forall V0. havoc_l2s_g_4__23(V0) -> !havoc_l2s_g_3__23(V0))
  # transitions:
  & (new(_old_l2s_g_3(V0)) <-> havoc_l2s_g_3__22(V0))
  & (new(_old_l2s_g_4(V0)) <-> havoc_l2s_g_4__22(V0))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else (if T0 = t then true else l2s_d(T0)))
  & (new(l2s_g_3(V0)) <-> havoc_l2s_g_3__23(V0))
  & (new(l2s_g_4(V0)) <-> havoc_l2s_g_4__23(V0))
  & (new(l2s_w_1(V0)) <-> (((l2s_w_1(V0) & (!(V0 = t))) & !havoc_l2s_g_3__22(V0)) & !false) & !havoc_l2s_g_3__23(V0))
  & (new(lock_acq(T)) <-> if T = t then false else lock_acq(T))
  & (new(lock_free) <-> false)
  & (new(lock_w0) <-> true)
  & (new(scheduled(T)) <-> false)
  & (new(unlock_sub(T)) <-> if T = t then true else unlock_sub(T))

transition step_lock_acq_else_then(t)
  modifies _old_l2s_g_3, _old_l2s_g_4, l2s_d, l2s_g_3, l2s_g_4, l2s_w_1, lock_acq, lock_set_wait, scheduled
  # assumes:
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !finished(t0))
  & (forall V0. l2s_g_2(V0) -> !finished(V0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  & lock_acq(t)
  & !lock_free
  & lock_w0
  & (forall V0. l2s_g_3(V0) -> havoc_l2s_g_3__24(V0))
  & (forall V0. (!l2s_g_3(V0) & !scheduled(V0)) -> !havoc_l2s_g_3__24(V0))
  & (forall V0. l2s_g_4(V0) -> havoc_l2s_g_4__24(V0))
  & (forall V0. (!l2s_g_4(V0) & !havoc_l2s_g_3__24(V0)) -> !havoc_l2s_g_4__24(V0))
  & (forall V0. havoc_l2s_g_3__24(V0) -> (!(V0 = t)))
  & (forall V0. havoc_l2s_g_4__24(V0) -> !havoc_l2s_g_3__24(V0))
  & (forall V0. havoc_l2s_g_3__24(V0) -> havoc_l2s_g_3__25(V0))
  & (forall V0. (!havoc_l2s_g_3__24(V0) & (!(V0 = t))) -> !havoc_l2s_g_3__25(V0))
  & (forall V0. havoc_l2s_g_4__24(V0) -> havoc_l2s_g_4__25(V0))
  & (forall V0. (!havoc_l2s_g_4__24(V0) & !havoc_l2s_g_3__25(V0)) -> !havoc_l2s_g_4__25(V0))
  & (forall V0. havoc_l2s_g_3__25(V0) -> !false)
  & (forall V0. havoc_l2s_g_4__25(V0) -> !havoc_l2s_g_3__25(V0))
  # transitions:
  & (new(_old_l2s_g_3(V0)) <-> havoc_l2s_g_3__24(V0))
  & (new(_old_l2s_g_4(V0)) <-> havoc_l2s_g_4__24(V0))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else (if T0 = t then true else l2s_d(T0)))
  & (new(l2s_g_3(V0)) <-> havoc_l2s_g_3__25(V0))
  & (new(l2s_g_4(V0)) <-> havoc_l2s_g_4__25(V0))
  & (new(l2s_w_1(V0)) <-> (((l2s_w_1(V0) & (!(V0 = t))) & !havoc_l2s_g_3__24(V0)) & !false) & !havoc_l2s_g_3__25(V0))
  & (new(lock_acq(T)) <-> if T = t then false else lock_acq(T))
  & (new(lock_set_wait(T)) <-> if T = t then true else lock_set_wait(T))
  & (new(scheduled(T)) <-> false)

transition step_lock_acq_else_else_then(t)
  modifies _old_l2s_g_3, _old_l2s_g_4, futex_wait, l2s_d, l2s_g_3, l2s_g_4, l2s_w_1, lock_acq, scheduled
  # assumes:
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !finished(t0))
  & (forall V0. l2s_g_2(V0) -> !finished(V0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  & lock_acq(t)
  & !lock_free
  & !lock_w0
  & lock_ws
  & (forall V0. l2s_g_3(V0) -> havoc_l2s_g_3__26(V0))
  & (forall V0. (!l2s_g_3(V0) & !scheduled(V0)) -> !havoc_l2s_g_3__26(V0))
  & (forall V0. l2s_g_4(V0) -> havoc_l2s_g_4__26(V0))
  & (forall V0. (!l2s_g_4(V0) & !havoc_l2s_g_3__26(V0)) -> !havoc_l2s_g_4__26(V0))
  & (forall V0. havoc_l2s_g_3__26(V0) -> (!(V0 = t)))
  & (forall V0. havoc_l2s_g_4__26(V0) -> !havoc_l2s_g_3__26(V0))
  & (forall V0. havoc_l2s_g_3__26(V0) -> havoc_l2s_g_3__27(V0))
  & (forall V0. (!havoc_l2s_g_3__26(V0) & (!(V0 = t))) -> !havoc_l2s_g_3__27(V0))
  & (forall V0. havoc_l2s_g_4__26(V0) -> havoc_l2s_g_4__27(V0))
  & (forall V0. (!havoc_l2s_g_4__26(V0) & !havoc_l2s_g_3__27(V0)) -> !havoc_l2s_g_4__27(V0))
  & (forall V0. havoc_l2s_g_3__27(V0) -> !false)
  & (forall V0. havoc_l2s_g_4__27(V0) -> !havoc_l2s_g_3__27(V0))
  # transitions:
  & (new(_old_l2s_g_3(V0)) <-> havoc_l2s_g_3__26(V0))
  & (new(_old_l2s_g_4(V0)) <-> havoc_l2s_g_4__26(V0))
  & (new(futex_wait(T)) <-> if T = t then true else futex_wait(T))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else (if T0 = t then true else l2s_d(T0)))
  & (new(l2s_g_3(V0)) <-> havoc_l2s_g_3__27(V0))
  & (new(l2s_g_4(V0)) <-> havoc_l2s_g_4__27(V0))
  & (new(l2s_w_1(V0)) <-> (((l2s_w_1(V0) & (!(V0 = t))) & !havoc_l2s_g_3__26(V0)) & !false) & !havoc_l2s_g_3__27(V0))
  & (new(lock_acq(T)) <-> if T = t then false else lock_acq(T))
  & (new(scheduled(T)) <-> false)

transition step_lock_acq_else_else_else(t)
  modifies _old_l2s_g_3, _old_l2s_g_4, l2s_d, l2s_g_3, l2s_g_4, l2s_w_1, lock_acq, scheduled
  # assumes:
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !finished(t0))
  & (forall V0. l2s_g_2(V0) -> !finished(V0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  & lock_acq(t)
  & !lock_free
  & !lock_w0
  & !lock_ws
  & (forall V0. l2s_g_3(V0) -> havoc_l2s_g_3__28(V0))
  & (forall V0. (!l2s_g_3(V0) & !scheduled(V0)) -> !havoc_l2s_g_3__28(V0))
  & (forall V0. l2s_g_4(V0) -> havoc_l2s_g_4__28(V0))
  & (forall V0. (!l2s_g_4(V0) & !havoc_l2s_g_3__28(V0)) -> !havoc_l2s_g_4__28(V0))
  & (forall V0. havoc_l2s_g_3__28(V0) -> (!(V0 = t)))
  & (forall V0. havoc_l2s_g_4__28(V0) -> !havoc_l2s_g_3__28(V0))
  & (forall V0. havoc_l2s_g_3__28(V0) -> havoc_l2s_g_3__29(V0))
  & (forall V0. (!havoc_l2s_g_3__28(V0) & (!(V0 = t))) -> !havoc_l2s_g_3__29(V0))
  & (forall V0. havoc_l2s_g_4__28(V0) -> havoc_l2s_g_4__29(V0))
  & (forall V0. (!havoc_l2s_g_4__28(V0) & !havoc_l2s_g_3__29(V0)) -> !havoc_l2s_g_4__29(V0))
  & (forall V0. havoc_l2s_g_3__29(V0) -> !false)
  & (forall V0. havoc_l2s_g_4__29(V0) -> !havoc_l2s_g_3__29(V0))
  # transitions:
  & (new(_old_l2s_g_3(V0)) <-> havoc_l2s_g_3__28(V0))
  & (new(_old_l2s_g_4(V0)) <-> havoc_l2s_g_4__28(V0))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else (if T0 = t then true else l2s_d(T0)))
  & (new(l2s_g_3(V0)) <-> havoc_l2s_g_3__29(V0))
  & (new(l2s_g_4(V0)) <-> havoc_l2s_g_4__29(V0))
  & (new(l2s_w_1(V0)) <-> (((l2s_w_1(V0) & (!(V0 = t))) & !havoc_l2s_g_3__28(V0)) & !false) & !havoc_l2s_g_3__29(V0))
  & (new(lock_acq(T)) <-> if T = t then false else lock_acq(T))
  & (new(scheduled(T)) <-> false)

transition step_futex_wake_if_some(t, t_q)
  modifies _old_l2s_g_0, _old_l2s_g_2, _old_l2s_g_3, _old_l2s_g_4, finished, futex_wake, l2s_d, l2s_g_0, l2s_g_2, l2s_g_3, l2s_g_4, l2s_w_1, queue, scheduled
  # assumes:
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !finished(t0))
  & (forall V0. l2s_g_2(V0) -> !finished(V0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  & futex_wake(t)
  & queue(t_q)
  & (forall V0. l2s_g_2(V0) -> havoc_l2s_g_2(V0))
  & (forall V0. (!l2s_g_2(V0) & !finished(V0)) -> !havoc_l2s_g_2(V0))
  & (l2s_g_0 -> havoc_l2s_g_0)
  & ((!l2s_g_0 & !finished(t0)) -> !havoc_l2s_g_0)
  & (forall V0. havoc_l2s_g_2(V0) -> (!(if V0 = t then true else finished(V0))))
  & (havoc_l2s_g_0 -> (!(if t0 = t then true else finished(t0))))
  & (forall V0. l2s_g_3(V0) -> havoc_l2s_g_3__30(V0))
  & (forall V0. (!l2s_g_3(V0) & !scheduled(V0)) -> !havoc_l2s_g_3__30(V0))
  & (forall V0. l2s_g_4(V0) -> havoc_l2s_g_4__30(V0))
  & (forall V0. (!l2s_g_4(V0) & !havoc_l2s_g_3__30(V0)) -> !havoc_l2s_g_4__30(V0))
  & (forall V0. havoc_l2s_g_3__30(V0) -> (!(V0 = t)))
  & (forall V0. havoc_l2s_g_4__30(V0) -> !havoc_l2s_g_3__30(V0))
  & (forall V0. havoc_l2s_g_3__30(V0) -> havoc_l2s_g_3__31(V0))
  & (forall V0. (!havoc_l2s_g_3__30(V0) & (!(V0 = t))) -> !havoc_l2s_g_3__31(V0))
  & (forall V0. havoc_l2s_g_4__30(V0) -> havoc_l2s_g_4__31(V0))
  & (forall V0. (!havoc_l2s_g_4__30(V0) & !havoc_l2s_g_3__31(V0)) -> !havoc_l2s_g_4__31(V0))
  & (forall V0. havoc_l2s_g_3__31(V0) -> !false)
  & (forall V0. havoc_l2s_g_4__31(V0) -> !havoc_l2s_g_3__31(V0))
  # transitions:
  & (new(_old_l2s_g_0) <-> l2s_g_0)
  & (new(_old_l2s_g_2(V0)) <-> l2s_g_2(V0))
  & (new(_old_l2s_g_3(V0)) <-> havoc_l2s_g_3__30(V0))
  & (new(_old_l2s_g_4(V0)) <-> havoc_l2s_g_4__30(V0))
  & (new(finished(T)) <-> if T = t then true else finished(T))
  & (new(futex_wake(T)) <-> if T = t then false else futex_wake(T))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else (if T0 = t then true else l2s_d(T0)))
  & (new(l2s_g_0) <-> havoc_l2s_g_0)
  & (new(l2s_g_2(V0)) <-> havoc_l2s_g_2(V0))
  & (new(l2s_g_3(V0)) <-> havoc_l2s_g_3__31(V0))
  & (new(l2s_g_4(V0)) <-> havoc_l2s_g_4__31(V0))
  & (new(l2s_w_1(V0)) <-> (((l2s_w_1(V0) & (!(V0 = t))) & !havoc_l2s_g_3__30(V0)) & !false) & !havoc_l2s_g_3__31(V0))
  & (new(queue(T_Q)) <-> if T_Q = t_q then false else queue(T_Q))
  & (new(scheduled(T)) <-> false)

transition step_futex_wake_if_some_else(t)
  modifies _old_l2s_g_0, _old_l2s_g_2, _old_l2s_g_3, _old_l2s_g_4, finished, futex_wake, l2s_d, l2s_g_0, l2s_g_2, l2s_g_3, l2s_g_4, l2s_w_1, scheduled
  # assumes:
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !finished(t0))
  & (forall V0. l2s_g_2(V0) -> !finished(V0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  & futex_wake(t)
  & (forall t_q. !queue(t_q))
  & (forall V0. l2s_g_2(V0) -> havoc_l2s_g_2__1(V0))
  & (forall V0. (!l2s_g_2(V0) & !finished(V0)) -> !havoc_l2s_g_2__1(V0))
  & (l2s_g_0 -> havoc_l2s_g_0__1)
  & ((!l2s_g_0 & !finished(t0)) -> !havoc_l2s_g_0__1)
  & (forall V0. havoc_l2s_g_2__1(V0) -> (!(if V0 = t then true else finished(V0))))
  & (havoc_l2s_g_0__1 -> (!(if t0 = t then true else finished(t0))))
  & (forall V0. l2s_g_3(V0) -> havoc_l2s_g_3__32(V0))
  & (forall V0. (!l2s_g_3(V0) & !scheduled(V0)) -> !havoc_l2s_g_3__32(V0))
  & (forall V0. l2s_g_4(V0) -> havoc_l2s_g_4__32(V0))
  & (forall V0. (!l2s_g_4(V0) & !havoc_l2s_g_3__32(V0)) -> !havoc_l2s_g_4__32(V0))
  & (forall V0. havoc_l2s_g_3__32(V0) -> (!(V0 = t)))
  & (forall V0. havoc_l2s_g_4__32(V0) -> !havoc_l2s_g_3__32(V0))
  & (forall V0. havoc_l2s_g_3__32(V0) -> havoc_l2s_g_3__33(V0))
  & (forall V0. (!havoc_l2s_g_3__32(V0) & (!(V0 = t))) -> !havoc_l2s_g_3__33(V0))
  & (forall V0. havoc_l2s_g_4__32(V0) -> havoc_l2s_g_4__33(V0))
  & (forall V0. (!havoc_l2s_g_4__32(V0) & !havoc_l2s_g_3__33(V0)) -> !havoc_l2s_g_4__33(V0))
  & (forall V0. havoc_l2s_g_3__33(V0) -> !false)
  & (forall V0. havoc_l2s_g_4__33(V0) -> !havoc_l2s_g_3__33(V0))
  # transitions:
  & (new(_old_l2s_g_0) <-> l2s_g_0)
  & (new(_old_l2s_g_2(V0)) <-> l2s_g_2(V0))
  & (new(_old_l2s_g_3(V0)) <-> havoc_l2s_g_3__32(V0))
  & (new(_old_l2s_g_4(V0)) <-> havoc_l2s_g_4__32(V0))
  & (new(finished(T)) <-> if T = t then true else finished(T))
  & (new(futex_wake(T)) <-> if T = t then false else futex_wake(T))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else (if T0 = t then true else l2s_d(T0)))
  & (new(l2s_g_0) <-> havoc_l2s_g_0__1)
  & (new(l2s_g_2(V0)) <-> havoc_l2s_g_2__1(V0))
  & (new(l2s_g_3(V0)) <-> havoc_l2s_g_3__33(V0))
  & (new(l2s_g_4(V0)) <-> havoc_l2s_g_4__33(V0))
  & (new(l2s_w_1(V0)) <-> (((l2s_w_1(V0) & (!(V0 = t))) & !havoc_l2s_g_3__32(V0)) & !false) & !havoc_l2s_g_3__33(V0))
  & (new(scheduled(T)) <-> false)

transition step_finished(t)
  modifies _old_l2s_g_3, _old_l2s_g_4, l2s_d, l2s_g_3, l2s_g_4, l2s_w_1, scheduled
  # assumes:
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !finished(t0))
  & (forall V0. l2s_g_2(V0) -> !finished(V0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  & finished(t)
  & (forall V0. l2s_g_3(V0) -> havoc_l2s_g_3__34(V0))
  & (forall V0. (!l2s_g_3(V0) & !scheduled(V0)) -> !havoc_l2s_g_3__34(V0))
  & (forall V0. l2s_g_4(V0) -> havoc_l2s_g_4__34(V0))
  & (forall V0. (!l2s_g_4(V0) & !havoc_l2s_g_3__34(V0)) -> !havoc_l2s_g_4__34(V0))
  & (forall V0. havoc_l2s_g_3__34(V0) -> (!(V0 = t)))
  & (forall V0. havoc_l2s_g_4__34(V0) -> !havoc_l2s_g_3__34(V0))
  & (forall V0. havoc_l2s_g_3__34(V0) -> havoc_l2s_g_3__35(V0))
  & (forall V0. (!havoc_l2s_g_3__34(V0) & (!(V0 = t))) -> !havoc_l2s_g_3__35(V0))
  & (forall V0. havoc_l2s_g_4__34(V0) -> havoc_l2s_g_4__35(V0))
  & (forall V0. (!havoc_l2s_g_4__34(V0) & !havoc_l2s_g_3__35(V0)) -> !havoc_l2s_g_4__35(V0))
  & (forall V0. havoc_l2s_g_3__35(V0) -> !false)
  & (forall V0. havoc_l2s_g_4__35(V0) -> !havoc_l2s_g_3__35(V0))
  # transitions:
  & (new(_old_l2s_g_3(V0)) <-> havoc_l2s_g_3__34(V0))
  & (new(_old_l2s_g_4(V0)) <-> havoc_l2s_g_4__34(V0))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else (if T0 = t then true else l2s_d(T0)))
  & (new(l2s_g_3(V0)) <-> havoc_l2s_g_3__35(V0))
  & (new(l2s_g_4(V0)) <-> havoc_l2s_g_4__35(V0))
  & (new(l2s_w_1(V0)) <-> (((l2s_w_1(V0) & (!(V0 = t))) & !havoc_l2s_g_3__34(V0)) & !false) & !havoc_l2s_g_3__35(V0))
  & (new(scheduled(T)) <-> false)

transition step_kernel_wait_then(t)
  modifies _old_l2s_g_3, _old_l2s_g_4, kernel_wait, l2s_d, l2s_g_3, l2s_g_4, l2s_w_1, lock_acq2, scheduled
  # assumes:
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !finished(t0))
  & (forall V0. l2s_g_2(V0) -> !finished(V0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  & kernel_wait(t)
  & !queue(t)
  & (forall V0. l2s_g_3(V0) -> havoc_l2s_g_3__36(V0))
  & (forall V0. (!l2s_g_3(V0) & !scheduled(V0)) -> !havoc_l2s_g_3__36(V0))
  & (forall V0. l2s_g_4(V0) -> havoc_l2s_g_4__36(V0))
  & (forall V0. (!l2s_g_4(V0) & !havoc_l2s_g_3__36(V0)) -> !havoc_l2s_g_4__36(V0))
  & (forall V0. havoc_l2s_g_3__36(V0) -> (!(V0 = t)))
  & (forall V0. havoc_l2s_g_4__36(V0) -> !havoc_l2s_g_3__36(V0))
  & (forall V0. havoc_l2s_g_3__36(V0) -> havoc_l2s_g_3__37(V0))
  & (forall V0. (!havoc_l2s_g_3__36(V0) & (!(V0 = t))) -> !havoc_l2s_g_3__37(V0))
  & (forall V0. havoc_l2s_g_4__36(V0) -> havoc_l2s_g_4__37(V0))
  & (forall V0. (!havoc_l2s_g_4__36(V0) & !havoc_l2s_g_3__37(V0)) -> !havoc_l2s_g_4__37(V0))
  & (forall V0. havoc_l2s_g_3__37(V0) -> !false)
  & (forall V0. havoc_l2s_g_4__37(V0) -> !havoc_l2s_g_3__37(V0))
  # transitions:
  & (new(_old_l2s_g_3(V0)) <-> havoc_l2s_g_3__36(V0))
  & (new(_old_l2s_g_4(V0)) <-> havoc_l2s_g_4__36(V0))
  & (new(kernel_wait(T)) <-> if T = t then false else kernel_wait(T))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else (if T0 = t then true else l2s_d(T0)))
  & (new(l2s_g_3(V0)) <-> havoc_l2s_g_3__37(V0))
  & (new(l2s_g_4(V0)) <-> havoc_l2s_g_4__37(V0))
  & (new(l2s_w_1(V0)) <-> (((l2s_w_1(V0) & (!(V0 = t))) & !havoc_l2s_g_3__36(V0)) & !false) & !havoc_l2s_g_3__37(V0))
  & (new(lock_acq2(T)) <-> if T = t then true else lock_acq2(T))
  & (new(scheduled(T)) <-> false)

transition step_kernel_wait_else(t)
  modifies _old_l2s_g_3, _old_l2s_g_4, l2s_d, l2s_g_3, l2s_g_4, l2s_w_1, scheduled
  # assumes:
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !finished(t0))
  & (forall V0. l2s_g_2(V0) -> !finished(V0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  & kernel_wait(t)
  & !!queue(t)
  & (forall V0. l2s_g_3(V0) -> havoc_l2s_g_3__38(V0))
  & (forall V0. (!l2s_g_3(V0) & !scheduled(V0)) -> !havoc_l2s_g_3__38(V0))
  & (forall V0. l2s_g_4(V0) -> havoc_l2s_g_4__38(V0))
  & (forall V0. (!l2s_g_4(V0) & !havoc_l2s_g_3__38(V0)) -> !havoc_l2s_g_4__38(V0))
  & (forall V0. havoc_l2s_g_3__38(V0) -> (!(V0 = t)))
  & (forall V0. havoc_l2s_g_4__38(V0) -> !havoc_l2s_g_3__38(V0))
  & (forall V0. havoc_l2s_g_3__38(V0) -> havoc_l2s_g_3__39(V0))
  & (forall V0. (!havoc_l2s_g_3__38(V0) & (!(V0 = t))) -> !havoc_l2s_g_3__39(V0))
  & (forall V0. havoc_l2s_g_4__38(V0) -> havoc_l2s_g_4__39(V0))
  & (forall V0. (!havoc_l2s_g_4__38(V0) & !havoc_l2s_g_3__39(V0)) -> !havoc_l2s_g_4__39(V0))
  & (forall V0. havoc_l2s_g_3__39(V0) -> !false)
  & (forall V0. havoc_l2s_g_4__39(V0) -> !havoc_l2s_g_3__39(V0))
  # transitions:
  & (new(_old_l2s_g_3(V0)) <-> havoc_l2s_g_3__38(V0))
  & (new(_old_l2s_g_4(V0)) <-> havoc_l2s_g_4__38(V0))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else (if T0 = t then true else l2s_d(T0)))
  & (new(l2s_g_3(V0)) <-> havoc_l2s_g_3__39(V0))
  & (new(l2s_g_4(V0)) <-> havoc_l2s_g_4__39(V0))
  & (new(l2s_w_1(V0)) <-> (((l2s_w_1(V0) & (!(V0 = t))) & !havoc_l2s_g_3__38(V0)) & !false) & !havoc_l2s_g_3__39(V0))
  & (new(scheduled(T)) <-> false)

transition step_unlock_sub_then(t)
  modifies _old_l2s_g_3, _old_l2s_g_4, l2s_d, l2s_g_3, l2s_g_4, l2s_w_1, lock_w0, lock_ws, scheduled, unlock_store, unlock_sub
  # assumes:
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !finished(t0))
  & (forall V0. l2s_g_2(V0) -> !finished(V0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  & unlock_sub(t)
  & lock_ws
  & (forall V0. l2s_g_3(V0) -> havoc_l2s_g_3__40(V0))
  & (forall V0. (!l2s_g_3(V0) & !scheduled(V0)) -> !havoc_l2s_g_3__40(V0))
  & (forall V0. l2s_g_4(V0) -> havoc_l2s_g_4__40(V0))
  & (forall V0. (!l2s_g_4(V0) & !havoc_l2s_g_3__40(V0)) -> !havoc_l2s_g_4__40(V0))
  & (forall V0. havoc_l2s_g_3__40(V0) -> (!(V0 = t)))
  & (forall V0. havoc_l2s_g_4__40(V0) -> !havoc_l2s_g_3__40(V0))
  & (forall V0. havoc_l2s_g_3__40(V0) -> havoc_l2s_g_3__41(V0))
  & (forall V0. (!havoc_l2s_g_3__40(V0) & (!(V0 = t))) -> !havoc_l2s_g_3__41(V0))
  & (forall V0. havoc_l2s_g_4__40(V0) -> havoc_l2s_g_4__41(V0))
  & (forall V0. (!havoc_l2s_g_4__40(V0) & !havoc_l2s_g_3__41(V0)) -> !havoc_l2s_g_4__41(V0))
  & (forall V0. havoc_l2s_g_3__41(V0) -> !false)
  & (forall V0. havoc_l2s_g_4__41(V0) -> !havoc_l2s_g_3__41(V0))
  # transitions:
  & (new(_old_l2s_g_3(V0)) <-> havoc_l2s_g_3__40(V0))
  & (new(_old_l2s_g_4(V0)) <-> havoc_l2s_g_4__40(V0))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else (if T0 = t then true else l2s_d(T0)))
  & (new(l2s_g_3(V0)) <-> havoc_l2s_g_3__41(V0))
  & (new(l2s_g_4(V0)) <-> havoc_l2s_g_4__41(V0))
  & (new(l2s_w_1(V0)) <-> (((l2s_w_1(V0) & (!(V0 = t))) & !havoc_l2s_g_3__40(V0)) & !false) & !havoc_l2s_g_3__41(V0))
  & (new(lock_w0) <-> true)
  & (new(lock_ws) <-> false)
  & (new(scheduled(T)) <-> false)
  & (new(unlock_store(T)) <-> if T = t then true else unlock_store(T))
  & (new(unlock_sub(T)) <-> if T = t then false else unlock_sub(T))

transition step_unlock_sub_else_then(t)
  modifies _old_l2s_g_0, _old_l2s_g_2, _old_l2s_g_3, _old_l2s_g_4, finished, l2s_d, l2s_g_0, l2s_g_2, l2s_g_3, l2s_g_4, l2s_w_1, lock_free, lock_w0, scheduled, unlock_sub
  # assumes:
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !finished(t0))
  & (forall V0. l2s_g_2(V0) -> !finished(V0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  & unlock_sub(t)
  & !lock_ws
  & lock_w0
  & (forall V0. l2s_g_2(V0) -> havoc_l2s_g_2__2(V0))
  & (forall V0. (!l2s_g_2(V0) & !finished(V0)) -> !havoc_l2s_g_2__2(V0))
  & (l2s_g_0 -> havoc_l2s_g_0__2)
  & ((!l2s_g_0 & !finished(t0)) -> !havoc_l2s_g_0__2)
  & (forall V0. havoc_l2s_g_2__2(V0) -> (!(if V0 = t then true else finished(V0))))
  & (havoc_l2s_g_0__2 -> (!(if t0 = t then true else finished(t0))))
  & (forall V0. l2s_g_3(V0) -> havoc_l2s_g_3__42(V0))
  & (forall V0. (!l2s_g_3(V0) & !scheduled(V0)) -> !havoc_l2s_g_3__42(V0))
  & (forall V0. l2s_g_4(V0) -> havoc_l2s_g_4__42(V0))
  & (forall V0. (!l2s_g_4(V0) & !havoc_l2s_g_3__42(V0)) -> !havoc_l2s_g_4__42(V0))
  & (forall V0. havoc_l2s_g_3__42(V0) -> (!(V0 = t)))
  & (forall V0. havoc_l2s_g_4__42(V0) -> !havoc_l2s_g_3__42(V0))
  & (forall V0. havoc_l2s_g_3__42(V0) -> havoc_l2s_g_3__43(V0))
  & (forall V0. (!havoc_l2s_g_3__42(V0) & (!(V0 = t))) -> !havoc_l2s_g_3__43(V0))
  & (forall V0. havoc_l2s_g_4__42(V0) -> havoc_l2s_g_4__43(V0))
  & (forall V0. (!havoc_l2s_g_4__42(V0) & !havoc_l2s_g_3__43(V0)) -> !havoc_l2s_g_4__43(V0))
  & (forall V0. havoc_l2s_g_3__43(V0) -> !false)
  & (forall V0. havoc_l2s_g_4__43(V0) -> !havoc_l2s_g_3__43(V0))
  # transitions:
  & (new(_old_l2s_g_0) <-> l2s_g_0)
  & (new(_old_l2s_g_2(V0)) <-> l2s_g_2(V0))
  & (new(_old_l2s_g_3(V0)) <-> havoc_l2s_g_3__42(V0))
  & (new(_old_l2s_g_4(V0)) <-> havoc_l2s_g_4__42(V0))
  & (new(finished(T)) <-> if T = t then true else finished(T))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else (if T0 = t then true else l2s_d(T0)))
  & (new(l2s_g_0) <-> havoc_l2s_g_0__2)
  & (new(l2s_g_2(V0)) <-> havoc_l2s_g_2__2(V0))
  & (new(l2s_g_3(V0)) <-> havoc_l2s_g_3__43(V0))
  & (new(l2s_g_4(V0)) <-> havoc_l2s_g_4__43(V0))
  & (new(l2s_w_1(V0)) <-> (((l2s_w_1(V0) & (!(V0 = t))) & !havoc_l2s_g_3__42(V0)) & !false) & !havoc_l2s_g_3__43(V0))
  & (new(lock_free) <-> true)
  & (new(lock_w0) <-> false)
  & (new(scheduled(T)) <-> false)
  & (new(unlock_sub(T)) <-> if T = t then false else unlock_sub(T))

transition step_unlock_sub_else_else(t)
  modifies _old_l2s_g_3, _old_l2s_g_4, l2s_d, l2s_g_3, l2s_g_4, l2s_w_1, scheduled, unlock_sub
  # assumes:
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !finished(t0))
  & (forall V0. l2s_g_2(V0) -> !finished(V0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  & unlock_sub(t)
  & !lock_ws
  & !lock_w0
  & false
  & (forall V0. l2s_g_3(V0) -> havoc_l2s_g_3__44(V0))
  & (forall V0. (!l2s_g_3(V0) & !scheduled(V0)) -> !havoc_l2s_g_3__44(V0))
  & (forall V0. l2s_g_4(V0) -> havoc_l2s_g_4__44(V0))
  & (forall V0. (!l2s_g_4(V0) & !havoc_l2s_g_3__44(V0)) -> !havoc_l2s_g_4__44(V0))
  & (forall V0. havoc_l2s_g_3__44(V0) -> (!(V0 = t)))
  & (forall V0. havoc_l2s_g_4__44(V0) -> !havoc_l2s_g_3__44(V0))
  & (forall V0. havoc_l2s_g_3__44(V0) -> havoc_l2s_g_3__45(V0))
  & (forall V0. (!havoc_l2s_g_3__44(V0) & (!(V0 = t))) -> !havoc_l2s_g_3__45(V0))
  & (forall V0. havoc_l2s_g_4__44(V0) -> havoc_l2s_g_4__45(V0))
  & (forall V0. (!havoc_l2s_g_4__44(V0) & !havoc_l2s_g_3__45(V0)) -> !havoc_l2s_g_4__45(V0))
  & (forall V0. havoc_l2s_g_3__45(V0) -> !false)
  & (forall V0. havoc_l2s_g_4__45(V0) -> !havoc_l2s_g_3__45(V0))
  # transitions:
  & (new(_old_l2s_g_3(V0)) <-> havoc_l2s_g_3__44(V0))
  & (new(_old_l2s_g_4(V0)) <-> havoc_l2s_g_4__44(V0))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else (if T0 = t then true else l2s_d(T0)))
  & (new(l2s_g_3(V0)) <-> havoc_l2s_g_3__45(V0))
  & (new(l2s_g_4(V0)) <-> havoc_l2s_g_4__45(V0))
  & (new(l2s_w_1(V0)) <-> (((l2s_w_1(V0) & (!(V0 = t))) & !havoc_l2s_g_3__44(V0)) & !false) & !havoc_l2s_g_3__45(V0))
  & (new(scheduled(T)) <-> false)
  & (new(unlock_sub(T)) <-> if T = t then false else unlock_sub(T))

transition idle_then()
  modifies __error, l2s_a, l2s_d, l2s_frozen, l2s_waiting
  # assumes:
  & l2s_waiting
  & (forall V0. !l2s_w_1(V0))
  & !l2s_w_0
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !finished(t0))
  & (forall V0. l2s_g_2(V0) -> !finished(V0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  # transitions:
  & (new(l2s_a(X)) <-> l2s_d(X))
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else l2s_d(T0))
  & (new(l2s_frozen) <-> true)
  & (new(l2s_waiting) <-> false)
  # asserts:
  & ((!__error & (!(((((((((((((((l2s_saved & (forall V0. !l2s_w_1(V0))) & !l2s_w_0) & (l2s_s_1 <-> lock_w0)) & (forall V0. l2s_d(V0) -> (l2s_s_12(V0) <-> unlock_sub(V0)))) & (forall V0. l2s_d(V0) -> (l2s_s_3(V0) <-> finished(V0)))) & (forall V0. l2s_d(V0) -> (l2s_s_5(V0) <-> futex_wake(V0)))) & (forall V0. l2s_d(V0) -> (l2s_s_6(V0) <-> kernel_wait(V0)))) & (l2s_s_2 <-> lock_ws)) & (l2s_s_0 <-> lock_free)) & (forall V0. l2s_d(V0) -> (l2s_s_10(V0) <-> queue(V0)))) & (forall V0. l2s_d(V0) -> (l2s_s_9(V0) <-> lock_set_wait(V0)))) & (forall V0. l2s_d(V0) -> (l2s_s_7(V0) <-> lock_acq(V0)))) & (forall V0. l2s_d(V0) -> (l2s_s_8(V0) <-> lock_acq2(V0)))) & (forall V0. l2s_d(V0) -> (l2s_s_4(V0) <-> futex_wait(V0)))) & (forall V0. l2s_d(V0) -> (l2s_s_11(V0) <-> unlock_store(V0)))))) -> !new(__error))

transition idle_else_then()
  modifies __error, l2s_d, l2s_frozen, l2s_s_0, l2s_s_1, l2s_s_10, l2s_s_11, l2s_s_12, l2s_s_2, l2s_s_3, l2s_s_4, l2s_s_5, l2s_s_6, l2s_s_7, l2s_s_8, l2s_s_9, l2s_saved, l2s_w_0, l2s_w_1
  # assumes:
  & l2s_frozen
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !finished(t0))
  & (forall V0. l2s_g_2(V0) -> !finished(V0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  # transitions:
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else l2s_d(T0))
  & (new(l2s_frozen) <-> false)
  & (new(l2s_s_0) <-> lock_free)
  & (new(l2s_s_1) <-> lock_w0)
  & (new(l2s_s_10(V0)) <-> queue(V0))
  & (new(l2s_s_11(V0)) <-> unlock_store(V0))
  & (new(l2s_s_12(V0)) <-> unlock_sub(V0))
  & (new(l2s_s_2) <-> lock_ws)
  & (new(l2s_s_3(V0)) <-> finished(V0))
  & (new(l2s_s_4(V0)) <-> futex_wait(V0))
  & (new(l2s_s_5(V0)) <-> futex_wake(V0))
  & (new(l2s_s_6(V0)) <-> kernel_wait(V0))
  & (new(l2s_s_7(V0)) <-> lock_acq(V0))
  & (new(l2s_s_8(V0)) <-> lock_acq2(V0))
  & (new(l2s_s_9(V0)) <-> lock_set_wait(V0))
  & (new(l2s_saved) <-> true)
  & (new(l2s_w_0) <-> (!(forall T. d(T))) & !l2s_g_1)
  & (new(l2s_w_1(V0)) <-> (l2s_d(V0) & !scheduled(V0)) & !l2s_g_3(V0))
  # asserts:
  & ((!__error & (!(((((((((((((((true & (forall V0. !((l2s_d(V0) & !scheduled(V0)) & !l2s_g_3(V0)))) & (!((!(forall T. d(T))) & !l2s_g_1))) & (lock_w0 <-> lock_w0)) & (forall V0. l2s_a(V0) -> (unlock_sub(V0) <-> unlock_sub(V0)))) & (forall V0. l2s_a(V0) -> (finished(V0) <-> finished(V0)))) & (forall V0. l2s_a(V0) -> (futex_wake(V0) <-> futex_wake(V0)))) & (forall V0. l2s_a(V0) -> (kernel_wait(V0) <-> kernel_wait(V0)))) & (lock_ws <-> lock_ws)) & (lock_free <-> lock_free)) & (forall V0. l2s_a(V0) -> (queue(V0) <-> queue(V0)))) & (forall V0. l2s_a(V0) -> (lock_set_wait(V0) <-> lock_set_wait(V0)))) & (forall V0. l2s_a(V0) -> (lock_acq(V0) <-> lock_acq(V0)))) & (forall V0. l2s_a(V0) -> (lock_acq2(V0) <-> lock_acq2(V0)))) & (forall V0. l2s_a(V0) -> (futex_wait(V0) <-> futex_wait(V0)))) & (forall V0. l2s_a(V0) -> (unlock_store(V0) <-> unlock_store(V0)))))) -> !new(__error))

transition idle_else_else()
  modifies __error, l2s_d
  # assumes:
  & (l2s_g_1 -> (!(forall T. d(T))))
  & (forall V0. l2s_g_4(V0) -> !l2s_g_3(V0))
  & (l2s_g_0 -> !finished(t0))
  & (forall V0. l2s_g_2(V0) -> !finished(V0))
  & (forall V0. l2s_g_3(V0) -> !scheduled(V0))
  # transitions:
  & (new(l2s_d(T0)) <-> if T0 = t0 then true else l2s_d(T0))
  # asserts:
  & ((!__error & (!(((((((((((((((l2s_saved & (forall V0. !l2s_w_1(V0))) & !l2s_w_0) & (l2s_s_1 <-> lock_w0)) & (forall V0. l2s_a(V0) -> (l2s_s_12(V0) <-> unlock_sub(V0)))) & (forall V0. l2s_a(V0) -> (l2s_s_3(V0) <-> finished(V0)))) & (forall V0. l2s_a(V0) -> (l2s_s_5(V0) <-> futex_wake(V0)))) & (forall V0. l2s_a(V0) -> (l2s_s_6(V0) <-> kernel_wait(V0)))) & (l2s_s_2 <-> lock_ws)) & (l2s_s_0 <-> lock_free)) & (forall V0. l2s_a(V0) -> (l2s_s_10(V0) <-> queue(V0)))) & (forall V0. l2s_a(V0) -> (l2s_s_9(V0) <-> lock_set_wait(V0)))) & (forall V0. l2s_a(V0) -> (l2s_s_7(V0) <-> lock_acq(V0)))) & (forall V0. l2s_a(V0) -> (l2s_s_8(V0) <-> lock_acq2(V0)))) & (forall V0. l2s_a(V0) -> (l2s_s_4(V0) <-> futex_wait(V0)))) & (forall V0. l2s_a(V0) -> (l2s_s_11(V0) <-> unlock_store(V0)))))) -> !new(__error))


safety [assertions] !__error

invariant (lock_free | lock_w0) | lock_ws
invariant !lock_free | !lock_w0
invariant !lock_free | !lock_ws
invariant !lock_w0 | !lock_ws
invariant (((((((lock_acq(T) | lock_set_wait(T)) | futex_wait(T)) | kernel_wait(T)) | lock_acq2(T)) | unlock_sub(T)) | unlock_store(T)) | futex_wake(T)) | finished(T)
invariant !lock_acq(T) | !lock_set_wait(T)
invariant !lock_acq(T) | !futex_wait(T)
invariant !lock_acq(T) | !kernel_wait(T)
invariant !lock_acq(T) | !lock_acq2(T)
invariant !lock_acq(T) | !unlock_sub(T)
invariant !lock_acq(T) | !unlock_store(T)
invariant !lock_acq(T) | !futex_wake(T)
invariant !lock_acq(T) | !finished(T)
invariant !lock_set_wait(T) | !futex_wait(T)
invariant !lock_set_wait(T) | !kernel_wait(T)
invariant !lock_set_wait(T) | !lock_acq2(T)
invariant !lock_set_wait(T) | !unlock_sub(T)
invariant !lock_set_wait(T) | !unlock_store(T)
invariant !lock_set_wait(T) | !futex_wake(T)
invariant !lock_set_wait(T) | !finished(T)
invariant !futex_wait(T) | !kernel_wait(T)
invariant !futex_wait(T) | !lock_acq2(T)
invariant !futex_wait(T) | !unlock_sub(T)
invariant !futex_wait(T) | !unlock_store(T)
invariant !futex_wait(T) | !futex_wake(T)
invariant !futex_wait(T) | !finished(T)
invariant !kernel_wait(T) | !lock_acq2(T)
invariant !kernel_wait(T) | !unlock_sub(T)
invariant !kernel_wait(T) | !unlock_store(T)
invariant !kernel_wait(T) | !futex_wake(T)
invariant !kernel_wait(T) | !finished(T)
invariant !lock_acq2(T) | !unlock_sub(T)
invariant !lock_acq2(T) | !unlock_store(T)
invariant !lock_acq2(T) | !futex_wake(T)
invariant !lock_acq2(T) | !finished(T)
invariant !unlock_sub(T) | !unlock_store(T)
invariant !unlock_sub(T) | !futex_wake(T)
invariant !unlock_sub(T) | !finished(T)
invariant !unlock_store(T) | !futex_wake(T)
invariant !unlock_store(T) | !finished(T)
invariant !futex_wake(T) | !finished(T)
invariant unlock_sub(T) -> (lock_w0 | lock_ws)
invariant unlock_store(T) -> (lock_w0 | lock_ws)
invariant (unlock_sub(T1) & unlock_sub(T2)) -> (T1 = T2)
invariant (unlock_store(T1) & unlock_store(T2)) -> (T1 = T2)
invariant (unlock_sub(T1) & unlock_store(T2)) -> false
invariant ((unlock_sub(T1) | unlock_sub(T1)) & (unlock_sub(T2) | unlock_sub(T2))) -> (T1 = T2)
invariant (lock_w0 | lock_ws) -> (exists T. unlock_sub(T) | unlock_store(T))
invariant !scheduled(T)
invariant (l2s_waiting | l2s_frozen) | l2s_saved
invariant !l2s_waiting | !l2s_frozen
invariant !l2s_waiting | !l2s_saved
invariant !l2s_frozen | !l2s_saved
invariant l2s_g_4(T)
invariant l2s_g_0
invariant !finished(t0)
invariant !l2s_g_1
invariant l2s_w_0 | (forall T. d(T))
invariant d(T) -> l2s_d(T)
invariant (l2s_frozen | l2s_saved) -> (forall T. l2s_d(T))
invariant (l2s_frozen | l2s_saved) -> (forall T. l2s_a(T))
invariant l2s_saved -> ((l2s_s_0 | l2s_s_1) | l2s_s_2)
invariant l2s_saved -> (!l2s_s_0 | !l2s_s_1)
invariant l2s_saved -> (!l2s_s_0 | !l2s_s_2)
invariant l2s_saved -> (!l2s_s_1 | !l2s_s_2)
invariant l2s_saved -> ((((((((l2s_s_7(T) | l2s_s_9(T)) | l2s_s_4(T)) | l2s_s_6(T)) | l2s_s_8(T)) | l2s_s_12(T)) | l2s_s_11(T)) | l2s_s_5(T)) | l2s_s_3(T))
invariant l2s_saved -> (!l2s_s_7(T) | !l2s_s_9(T))
invariant l2s_saved -> (!l2s_s_7(T) | !l2s_s_4(T))
invariant l2s_saved -> (!l2s_s_7(T) | !l2s_s_6(T))
invariant l2s_saved -> (!l2s_s_7(T) | !l2s_s_8(T))
invariant l2s_saved -> (!l2s_s_7(T) | !l2s_s_12(T))
invariant l2s_saved -> (!l2s_s_7(T) | !l2s_s_11(T))
invariant l2s_saved -> (!l2s_s_7(T) | !l2s_s_5(T))
invariant l2s_saved -> (!l2s_s_7(T) | !l2s_s_3(T))
invariant l2s_saved -> (!l2s_s_9(T) | !l2s_s_4(T))
invariant l2s_saved -> (!l2s_s_9(T) | !l2s_s_6(T))
invariant l2s_saved -> (!l2s_s_9(T) | !l2s_s_8(T))
invariant l2s_saved -> (!l2s_s_9(T) | !l2s_s_12(T))
invariant l2s_saved -> (!l2s_s_9(T) | !l2s_s_11(T))
invariant l2s_saved -> (!l2s_s_9(T) | !l2s_s_5(T))
invariant l2s_saved -> (!l2s_s_9(T) | !l2s_s_3(T))
invariant l2s_saved -> (!l2s_s_4(T) | !l2s_s_6(T))
invariant l2s_saved -> (!l2s_s_4(T) | !l2s_s_8(T))
invariant l2s_saved -> (!l2s_s_4(T) | !l2s_s_12(T))
invariant l2s_saved -> (!l2s_s_4(T) | !l2s_s_11(T))
invariant l2s_saved -> (!l2s_s_4(T) | !l2s_s_5(T))
invariant l2s_saved -> (!l2s_s_4(T) | !l2s_s_3(T))
invariant l2s_saved -> (!l2s_s_6(T) | !l2s_s_8(T))
invariant l2s_saved -> (!l2s_s_6(T) | !l2s_s_12(T))
invariant l2s_saved -> (!l2s_s_6(T) | !l2s_s_11(T))
invariant l2s_saved -> (!l2s_s_6(T) | !l2s_s_5(T))
invariant l2s_saved -> (!l2s_s_6(T) | !l2s_s_3(T))
invariant l2s_saved -> (!l2s_s_8(T) | !l2s_s_12(T))
invariant l2s_saved -> (!l2s_s_8(T) | !l2s_s_11(T))
invariant l2s_saved -> (!l2s_s_8(T) | !l2s_s_5(T))
invariant l2s_saved -> (!l2s_s_8(T) | !l2s_s_3(T))
invariant l2s_saved -> (!l2s_s_12(T) | !l2s_s_11(T))
invariant l2s_saved -> (!l2s_s_12(T) | !l2s_s_5(T))
invariant l2s_saved -> (!l2s_s_12(T) | !l2s_s_3(T))
invariant l2s_saved -> (!l2s_s_11(T) | !l2s_s_5(T))
invariant l2s_saved -> (!l2s_s_11(T) | !l2s_s_3(T))
invariant l2s_saved -> (!l2s_s_5(T) | !l2s_s_3(T))
invariant l2s_saved -> (l2s_s_12(T) -> (l2s_s_1 | l2s_s_2))
invariant l2s_saved -> (l2s_s_11(T) -> (l2s_s_1 | l2s_s_2))
invariant l2s_saved -> ((l2s_s_12(T1) & l2s_s_12(T2)) -> (T1 = T2))
invariant l2s_saved -> ((l2s_s_11(T1) & l2s_s_11(T2)) -> (T1 = T2))
invariant l2s_saved -> ((l2s_s_12(T1) & l2s_s_11(T2)) -> false)
invariant l2s_saved -> (((l2s_s_12(T1) | l2s_s_12(T1)) & (l2s_s_12(T2) | l2s_s_12(T2))) -> (T1 = T2))
invariant l2s_saved -> ((l2s_s_1 | l2s_s_2) -> (exists T. l2s_s_12(T) | l2s_s_11(T)))
invariant (l2s_saved & l2s_w_1(T)) -> (l2s_s_7(T) <-> lock_acq(T))
invariant (l2s_saved & l2s_w_1(T)) -> (l2s_s_9(T) <-> lock_set_wait(T))
invariant (l2s_saved & l2s_w_1(T)) -> (l2s_s_4(T) <-> futex_wait(T))
invariant (l2s_saved & l2s_w_1(T)) -> (l2s_s_6(T) <-> kernel_wait(T))
invariant (l2s_saved & l2s_w_1(T)) -> (l2s_s_8(T) <-> lock_acq2(T))
invariant (l2s_saved & l2s_w_1(T)) -> (l2s_s_12(T) <-> unlock_sub(T))
invariant (l2s_saved & l2s_w_1(T)) -> (l2s_s_11(T) <-> unlock_store(T))
invariant (l2s_saved & l2s_w_1(T)) -> (l2s_s_5(T) <-> futex_wake(T))
invariant (l2s_saved & l2s_w_1(T)) -> (l2s_s_3(T) <-> finished(T))
invariant l2s_saved -> ((l2s_s_12(T) & !l2s_w_1(T)) -> ((unlock_store(T) | futex_wake(T)) | finished(T)))
invariant l2s_saved -> ((l2s_s_11(T) & !l2s_w_1(T)) -> (futex_wake(T) | finished(T)))
invariant l2s_saved -> ((l2s_s_5(T) & !l2s_w_1(T)) -> finished(T))
invariant l2s_saved -> (l2s_s_3(T) -> finished(T))
invariant l2s_saved -> ((l2s_s_7(T) & !l2s_w_1(T)) -> !lock_acq(T))
invariant queue(T) -> kernel_wait(T)
invariant (forall T1. ((kernel_wait(T1) & queue(T1)) & lock_ws) -> (exists T2. unlock_sub(T2) | unlock_store(T2)))
invariant (forall T1. ((kernel_wait(T1) & queue(T1)) & lock_w0) -> (exists T2. (((unlock_store(T2) | (kernel_wait(T2) & !queue(T2))) | lock_acq2(T2)) | futex_wake(T2)) | lock_set_wait(T2)))
invariant (forall T1. ((kernel_wait(T1) & queue(T1)) & lock_free) -> (exists T2. ((futex_wake(T2) | lock_acq2(T2)) | lock_set_wait(T2)) | (kernel_wait(T2) & !queue(T2))))
invariant (forall T1. (kernel_wait(T1) & queue(T1)) -> (exists T2. (((((unlock_sub(T2) & lock_ws) | unlock_store(T2)) | futex_wake(T2)) | lock_acq2(T2)) | lock_set_wait(T2)) | (kernel_wait(T2) & !queue(T2))))
invariant l2s_saved -> ((l2s_s_0 & (forall T. ((((l2s_s_7(T) | l2s_s_9(T)) | l2s_s_4(T)) | l2s_s_6(T)) | l2s_s_8(T)) -> ((((lock_acq(T) | lock_set_wait(T)) | futex_wait(T)) | kernel_wait(T)) | lock_acq2(T)))) -> lock_free)
invariant l2s_saved -> ((l2s_s_0 & (forall T. ((((l2s_s_7(T) | l2s_s_9(T)) | l2s_s_4(T)) | l2s_s_6(T)) | l2s_s_8(T)) -> ((((lock_acq(T) | lock_set_wait(T)) | futex_wait(T)) | kernel_wait(T)) | lock_acq2(T)))) -> (((l2s_s_7(T) | l2s_s_8(T)) & !l2s_w_1(T)) -> false))
invariant l2s_saved -> ((l2s_s_0 & (forall T. ((((l2s_s_7(T) | l2s_s_9(T)) | l2s_s_4(T)) | l2s_s_6(T)) | l2s_s_8(T)) -> ((((lock_acq(T) | lock_set_wait(T)) | futex_wait(T)) | kernel_wait(T)) | lock_acq2(T)))) -> ((l2s_s_9(T) & !l2s_w_1(T)) -> lock_acq2(T)))
invariant l2s_saved -> ((l2s_s_0 & (forall T. ((((l2s_s_7(T) | l2s_s_9(T)) | l2s_s_4(T)) | l2s_s_6(T)) | l2s_s_8(T)) -> ((((lock_acq(T) | lock_set_wait(T)) | futex_wait(T)) | kernel_wait(T)) | lock_acq2(T)))) -> ((l2s_s_4(T) & !l2s_w_1(T)) -> lock_acq2(T)))
invariant l2s_saved -> ((l2s_s_0 & (forall T. ((((l2s_s_7(T) | l2s_s_9(T)) | l2s_s_4(T)) | l2s_s_6(T)) | l2s_s_8(T)) -> ((((lock_acq(T) | lock_set_wait(T)) | futex_wait(T)) | kernel_wait(T)) | lock_acq2(T)))) -> (!l2s_s_10(T) -> !queue(T)))
invariant l2s_saved -> ((l2s_s_0 & (forall T. ((((l2s_s_7(T) | l2s_s_9(T)) | l2s_s_4(T)) | l2s_s_6(T)) | l2s_s_8(T)) -> ((((lock_acq(T) | lock_set_wait(T)) | futex_wait(T)) | kernel_wait(T)) | lock_acq2(T)))) -> (((l2s_s_6(T) & !l2s_s_10(T)) & !l2s_w_1(T)) -> lock_acq2(T)))

